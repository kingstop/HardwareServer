// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dream_hero.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dream_hero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* S2CMsgHeroInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CMsgHeroInit_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CMsgHeroEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CMsgHeroEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CMsgToyInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CMsgToyInit_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CMsgEquipInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CMsgEquipInit_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SModifySuitNameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SModifySuitNameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CModifySuitNameACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CModifySuitNameACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CModifySuitErrorACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CModifySuitErrorACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SModifySuitReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SModifySuitReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CModifySuitACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CModifySuitACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SDelSuitReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SDelSuitReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CDelSuitACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CDelSuitACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SVerifyToyCDKeyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SVerifyToyCDKeyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CVerifyToyCDKeyErrorACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CVerifyToyCDKeyErrorACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CVerifyToyCDKeyACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CVerifyToyCDKeyACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CEquipLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CEquipLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CEquipLevelUpACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CEquipLevelUpACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CEquipLevelUpErrorACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CEquipLevelUpErrorACK_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dream_5fhero_2eproto() {
  protobuf_AddDesc_dream_5fhero_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dream_hero.proto");
  GOOGLE_CHECK(file != NULL);
  S2CMsgHeroInit_descriptor_ = file->message_type(0);
  static const int S2CMsgHeroInit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgHeroInit, hero_),
  };
  S2CMsgHeroInit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CMsgHeroInit_descriptor_,
      S2CMsgHeroInit::default_instance_,
      S2CMsgHeroInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgHeroInit, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CMsgHeroInit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgHeroInit, _internal_metadata_),
      -1);
  S2CMsgHeroEquip_descriptor_ = file->message_type(1);
  static const int S2CMsgHeroEquip_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgHeroEquip, equips_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgHeroEquip, end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgHeroEquip, begin_),
  };
  S2CMsgHeroEquip_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CMsgHeroEquip_descriptor_,
      S2CMsgHeroEquip::default_instance_,
      S2CMsgHeroEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgHeroEquip, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CMsgHeroEquip),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgHeroEquip, _internal_metadata_),
      -1);
  S2CMsgToyInit_descriptor_ = file->message_type(2);
  static const int S2CMsgToyInit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgToyInit, toys_),
  };
  S2CMsgToyInit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CMsgToyInit_descriptor_,
      S2CMsgToyInit::default_instance_,
      S2CMsgToyInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgToyInit, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CMsgToyInit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgToyInit, _internal_metadata_),
      -1);
  S2CMsgEquipInit_descriptor_ = file->message_type(3);
  static const int S2CMsgEquipInit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgEquipInit, equip_),
  };
  S2CMsgEquipInit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CMsgEquipInit_descriptor_,
      S2CMsgEquipInit::default_instance_,
      S2CMsgEquipInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgEquipInit, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CMsgEquipInit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMsgEquipInit, _internal_metadata_),
      -1);
  C2SModifySuitNameReq_descriptor_ = file->message_type(4);
  static const int C2SModifySuitNameReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SModifySuitNameReq, suit_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SModifySuitNameReq, suit_name_),
  };
  C2SModifySuitNameReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SModifySuitNameReq_descriptor_,
      C2SModifySuitNameReq::default_instance_,
      C2SModifySuitNameReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SModifySuitNameReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(C2SModifySuitNameReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SModifySuitNameReq, _internal_metadata_),
      -1);
  S2CModifySuitNameACK_descriptor_ = file->message_type(5);
  static const int S2CModifySuitNameACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitNameACK, suit_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitNameACK, suit_name_),
  };
  S2CModifySuitNameACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CModifySuitNameACK_descriptor_,
      S2CModifySuitNameACK::default_instance_,
      S2CModifySuitNameACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitNameACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CModifySuitNameACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitNameACK, _internal_metadata_),
      -1);
  S2CModifySuitErrorACK_descriptor_ = file->message_type(6);
  static const int S2CModifySuitErrorACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitErrorACK, suit_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitErrorACK, error_),
  };
  S2CModifySuitErrorACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CModifySuitErrorACK_descriptor_,
      S2CModifySuitErrorACK::default_instance_,
      S2CModifySuitErrorACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitErrorACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CModifySuitErrorACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitErrorACK, _internal_metadata_),
      -1);
  C2SModifySuitReq_descriptor_ = file->message_type(7);
  static const int C2SModifySuitReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SModifySuitReq, data_),
  };
  C2SModifySuitReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SModifySuitReq_descriptor_,
      C2SModifySuitReq::default_instance_,
      C2SModifySuitReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SModifySuitReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(C2SModifySuitReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SModifySuitReq, _internal_metadata_),
      -1);
  S2CModifySuitACK_descriptor_ = file->message_type(8);
  static const int S2CModifySuitACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitACK, suit_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitACK, error_),
  };
  S2CModifySuitACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CModifySuitACK_descriptor_,
      S2CModifySuitACK::default_instance_,
      S2CModifySuitACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CModifySuitACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CModifySuitACK, _internal_metadata_),
      -1);
  C2SDelSuitReq_descriptor_ = file->message_type(9);
  static const int C2SDelSuitReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDelSuitReq, suit_id_),
  };
  C2SDelSuitReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SDelSuitReq_descriptor_,
      C2SDelSuitReq::default_instance_,
      C2SDelSuitReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDelSuitReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(C2SDelSuitReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDelSuitReq, _internal_metadata_),
      -1);
  S2CDelSuitACK_descriptor_ = file->message_type(10);
  static const int S2CDelSuitACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CDelSuitACK, suit_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CDelSuitACK, error_),
  };
  S2CDelSuitACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CDelSuitACK_descriptor_,
      S2CDelSuitACK::default_instance_,
      S2CDelSuitACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CDelSuitACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CDelSuitACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CDelSuitACK, _internal_metadata_),
      -1);
  C2SVerifyToyCDKeyReq_descriptor_ = file->message_type(11);
  static const int C2SVerifyToyCDKeyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVerifyToyCDKeyReq, cd_key_),
  };
  C2SVerifyToyCDKeyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SVerifyToyCDKeyReq_descriptor_,
      C2SVerifyToyCDKeyReq::default_instance_,
      C2SVerifyToyCDKeyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVerifyToyCDKeyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(C2SVerifyToyCDKeyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVerifyToyCDKeyReq, _internal_metadata_),
      -1);
  S2CVerifyToyCDKeyErrorACK_descriptor_ = file->message_type(12);
  static const int S2CVerifyToyCDKeyErrorACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVerifyToyCDKeyErrorACK, cd_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVerifyToyCDKeyErrorACK, error_),
  };
  S2CVerifyToyCDKeyErrorACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CVerifyToyCDKeyErrorACK_descriptor_,
      S2CVerifyToyCDKeyErrorACK::default_instance_,
      S2CVerifyToyCDKeyErrorACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVerifyToyCDKeyErrorACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CVerifyToyCDKeyErrorACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVerifyToyCDKeyErrorACK, _internal_metadata_),
      -1);
  S2CVerifyToyCDKeyACK_descriptor_ = file->message_type(13);
  static const int S2CVerifyToyCDKeyACK_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVerifyToyCDKeyACK, toydata_),
  };
  S2CVerifyToyCDKeyACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CVerifyToyCDKeyACK_descriptor_,
      S2CVerifyToyCDKeyACK::default_instance_,
      S2CVerifyToyCDKeyACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVerifyToyCDKeyACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CVerifyToyCDKeyACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVerifyToyCDKeyACK, _internal_metadata_),
      -1);
  S2CEquipLevelUpReq_descriptor_ = file->message_type(14);
  static const int S2CEquipLevelUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpReq, equip_id_),
  };
  S2CEquipLevelUpReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CEquipLevelUpReq_descriptor_,
      S2CEquipLevelUpReq::default_instance_,
      S2CEquipLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CEquipLevelUpReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpReq, _internal_metadata_),
      -1);
  S2CEquipLevelUpACK_descriptor_ = file->message_type(15);
  static const int S2CEquipLevelUpACK_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpACK, equip_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpACK, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpACK, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpACK, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpACK, diamand_),
  };
  S2CEquipLevelUpACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CEquipLevelUpACK_descriptor_,
      S2CEquipLevelUpACK::default_instance_,
      S2CEquipLevelUpACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CEquipLevelUpACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpACK, _internal_metadata_),
      -1);
  S2CEquipLevelUpErrorACK_descriptor_ = file->message_type(16);
  static const int S2CEquipLevelUpErrorACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpErrorACK, equip_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpErrorACK, error_),
  };
  S2CEquipLevelUpErrorACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CEquipLevelUpErrorACK_descriptor_,
      S2CEquipLevelUpErrorACK::default_instance_,
      S2CEquipLevelUpErrorACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpErrorACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(S2CEquipLevelUpErrorACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEquipLevelUpErrorACK, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dream_5fhero_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CMsgHeroInit_descriptor_, &S2CMsgHeroInit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CMsgHeroEquip_descriptor_, &S2CMsgHeroEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CMsgToyInit_descriptor_, &S2CMsgToyInit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CMsgEquipInit_descriptor_, &S2CMsgEquipInit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SModifySuitNameReq_descriptor_, &C2SModifySuitNameReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CModifySuitNameACK_descriptor_, &S2CModifySuitNameACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CModifySuitErrorACK_descriptor_, &S2CModifySuitErrorACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SModifySuitReq_descriptor_, &C2SModifySuitReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CModifySuitACK_descriptor_, &S2CModifySuitACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SDelSuitReq_descriptor_, &C2SDelSuitReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CDelSuitACK_descriptor_, &S2CDelSuitACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SVerifyToyCDKeyReq_descriptor_, &C2SVerifyToyCDKeyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CVerifyToyCDKeyErrorACK_descriptor_, &S2CVerifyToyCDKeyErrorACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CVerifyToyCDKeyACK_descriptor_, &S2CVerifyToyCDKeyACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CEquipLevelUpReq_descriptor_, &S2CEquipLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CEquipLevelUpACK_descriptor_, &S2CEquipLevelUpACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CEquipLevelUpErrorACK_descriptor_, &S2CEquipLevelUpErrorACK::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dream_5fhero_2eproto() {
  delete S2CMsgHeroInit::default_instance_;
  delete S2CMsgHeroInit_reflection_;
  delete S2CMsgHeroEquip::default_instance_;
  delete S2CMsgHeroEquip_reflection_;
  delete S2CMsgToyInit::default_instance_;
  delete S2CMsgToyInit_reflection_;
  delete S2CMsgEquipInit::default_instance_;
  delete S2CMsgEquipInit_reflection_;
  delete C2SModifySuitNameReq::default_instance_;
  delete C2SModifySuitNameReq_reflection_;
  delete S2CModifySuitNameACK::default_instance_;
  delete S2CModifySuitNameACK_reflection_;
  delete S2CModifySuitErrorACK::default_instance_;
  delete S2CModifySuitErrorACK_reflection_;
  delete C2SModifySuitReq::default_instance_;
  delete C2SModifySuitReq_reflection_;
  delete S2CModifySuitACK::default_instance_;
  delete S2CModifySuitACK_reflection_;
  delete C2SDelSuitReq::default_instance_;
  delete C2SDelSuitReq_reflection_;
  delete S2CDelSuitACK::default_instance_;
  delete S2CDelSuitACK_reflection_;
  delete C2SVerifyToyCDKeyReq::default_instance_;
  delete C2SVerifyToyCDKeyReq_reflection_;
  delete S2CVerifyToyCDKeyErrorACK::default_instance_;
  delete S2CVerifyToyCDKeyErrorACK_reflection_;
  delete S2CVerifyToyCDKeyACK::default_instance_;
  delete S2CVerifyToyCDKeyACK_reflection_;
  delete S2CEquipLevelUpReq::default_instance_;
  delete S2CEquipLevelUpReq_reflection_;
  delete S2CEquipLevelUpACK::default_instance_;
  delete S2CEquipLevelUpACK_reflection_;
  delete S2CEquipLevelUpErrorACK::default_instance_;
  delete S2CEquipLevelUpErrorACK_reflection_;
}

void protobuf_AddDesc_dream_5fhero_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::message::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020dream_hero.proto\022\007message\032\014common.prot"
    "o\"4\n\016S2CMsgHeroInit\022\"\n\004hero\030\001 \002(\0132\024.mess"
    "age.MsgHeroData\"T\n\017S2CMsgHeroEquip\022%\n\006eq"
    "uips\030\001 \003(\0132\025.message.MsgEquipData\022\013\n\003end"
    "\030\002 \002(\010\022\r\n\005begin\030\003 \002(\010\"6\n\rS2CMsgToyInit\022%"
    "\n\004toys\030\001 \003(\0132\027.message.MsgToyBaseData\":\n"
    "\017S2CMsgEquipInit\022\'\n\005equip\030\001 \002(\0132\030.messag"
    "e.S2CMsgHeroEquip\":\n\024C2SModifySuitNameRe"
    "q\022\017\n\007suit_id\030\001 \002(\005\022\021\n\tsuit_name\030\002 \002(\t\":\n"
    "\024S2CModifySuitNameACK\022\017\n\007suit_id\030\001 \002(\005\022\021"
    "\n\tsuit_name\030\002 \002(\t\"Y\n\025S2CModifySuitErrorA"
    "CK\022\017\n\007suit_id\030\001 \002(\005\022/\n\005error\030\002 \002(\0162\026.mes"
    "sage.HeroErrorCode:\010no_error\"6\n\020C2SModif"
    "ySuitReq\022\"\n\004data\030\001 \002(\0132\024.message.MsgSuit"
    "Data\"T\n\020S2CModifySuitACK\022\017\n\007suit_id\030\001 \002("
    "\005\022/\n\005error\030\002 \002(\0162\026.message.HeroErrorCode"
    ":\010no_error\" \n\rC2SDelSuitReq\022\017\n\007suit_id\030\001"
    " \002(\005\"Q\n\rS2CDelSuitACK\022\017\n\007suit_id\030\001 \002(\005\022/"
    "\n\005error\030\002 \002(\0162\026.message.HeroErrorCode:\010n"
    "o_error\"&\n\024C2SVerifyToyCDKeyReq\022\016\n\006cd_ke"
    "y\030\001 \002(\t\"\\\n\031S2CVerifyToyCDKeyErrorACK\022\016\n\006"
    "cd_key\030\001 \002(\t\022/\n\005error\030\002 \002(\0162\026.message.He"
    "roErrorCode:\010no_error\"<\n\024S2CVerifyToyCDK"
    "eyACK\022$\n\007ToyData\030\001 \002(\0132\023.message.MsgToyD"
    "ata\"&\n\022S2CEquipLevelUpReq\022\020\n\010equip_id\030\001 "
    "\002(\004\"c\n\022S2CEquipLevelUpACK\022\020\n\010equip_id\030\001 "
    "\002(\004\022\r\n\005level\030\002 \002(\005\022\014\n\004gold\030\003 \002(\005\022\r\n\005coun"
    "t\030\004 \002(\005\022\017\n\007diamand\030\005 \002(\005\"\\\n\027S2CEquipLeve"
    "lUpErrorACK\022\020\n\010equip_id\030\001 \002(\004\022/\n\005error\030\002"
    " \002(\0162\026.message.HeroErrorCode:\010no_error", 1198);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dream_hero.proto", &protobuf_RegisterTypes);
  S2CMsgHeroInit::default_instance_ = new S2CMsgHeroInit();
  S2CMsgHeroEquip::default_instance_ = new S2CMsgHeroEquip();
  S2CMsgToyInit::default_instance_ = new S2CMsgToyInit();
  S2CMsgEquipInit::default_instance_ = new S2CMsgEquipInit();
  C2SModifySuitNameReq::default_instance_ = new C2SModifySuitNameReq();
  S2CModifySuitNameACK::default_instance_ = new S2CModifySuitNameACK();
  S2CModifySuitErrorACK::default_instance_ = new S2CModifySuitErrorACK();
  C2SModifySuitReq::default_instance_ = new C2SModifySuitReq();
  S2CModifySuitACK::default_instance_ = new S2CModifySuitACK();
  C2SDelSuitReq::default_instance_ = new C2SDelSuitReq();
  S2CDelSuitACK::default_instance_ = new S2CDelSuitACK();
  C2SVerifyToyCDKeyReq::default_instance_ = new C2SVerifyToyCDKeyReq();
  S2CVerifyToyCDKeyErrorACK::default_instance_ = new S2CVerifyToyCDKeyErrorACK();
  S2CVerifyToyCDKeyACK::default_instance_ = new S2CVerifyToyCDKeyACK();
  S2CEquipLevelUpReq::default_instance_ = new S2CEquipLevelUpReq();
  S2CEquipLevelUpACK::default_instance_ = new S2CEquipLevelUpACK();
  S2CEquipLevelUpErrorACK::default_instance_ = new S2CEquipLevelUpErrorACK();
  S2CMsgHeroInit::default_instance_->InitAsDefaultInstance();
  S2CMsgHeroEquip::default_instance_->InitAsDefaultInstance();
  S2CMsgToyInit::default_instance_->InitAsDefaultInstance();
  S2CMsgEquipInit::default_instance_->InitAsDefaultInstance();
  C2SModifySuitNameReq::default_instance_->InitAsDefaultInstance();
  S2CModifySuitNameACK::default_instance_->InitAsDefaultInstance();
  S2CModifySuitErrorACK::default_instance_->InitAsDefaultInstance();
  C2SModifySuitReq::default_instance_->InitAsDefaultInstance();
  S2CModifySuitACK::default_instance_->InitAsDefaultInstance();
  C2SDelSuitReq::default_instance_->InitAsDefaultInstance();
  S2CDelSuitACK::default_instance_->InitAsDefaultInstance();
  C2SVerifyToyCDKeyReq::default_instance_->InitAsDefaultInstance();
  S2CVerifyToyCDKeyErrorACK::default_instance_->InitAsDefaultInstance();
  S2CVerifyToyCDKeyACK::default_instance_->InitAsDefaultInstance();
  S2CEquipLevelUpReq::default_instance_->InitAsDefaultInstance();
  S2CEquipLevelUpACK::default_instance_->InitAsDefaultInstance();
  S2CEquipLevelUpErrorACK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dream_5fhero_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dream_5fhero_2eproto {
  StaticDescriptorInitializer_dream_5fhero_2eproto() {
    protobuf_AddDesc_dream_5fhero_2eproto();
  }
} static_descriptor_initializer_dream_5fhero_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int S2CMsgHeroInit::kHeroFieldNumber;
#endif  // !_MSC_VER

S2CMsgHeroInit::S2CMsgHeroInit()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CMsgHeroInit)
}

void S2CMsgHeroInit::InitAsDefaultInstance() {
  hero_ = const_cast< ::message::MsgHeroData*>(&::message::MsgHeroData::default_instance());
}

S2CMsgHeroInit::S2CMsgHeroInit(const S2CMsgHeroInit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CMsgHeroInit)
}

void S2CMsgHeroInit::SharedCtor() {
  _cached_size_ = 0;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CMsgHeroInit::~S2CMsgHeroInit() {
  // @@protoc_insertion_point(destructor:message.S2CMsgHeroInit)
  SharedDtor();
}

void S2CMsgHeroInit::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
  }
}

void S2CMsgHeroInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CMsgHeroInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CMsgHeroInit_descriptor_;
}

const S2CMsgHeroInit& S2CMsgHeroInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CMsgHeroInit* S2CMsgHeroInit::default_instance_ = NULL;

S2CMsgHeroInit* S2CMsgHeroInit::New(::google::protobuf::Arena* arena) const {
  S2CMsgHeroInit* n = new S2CMsgHeroInit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CMsgHeroInit::Clear() {
  if (has_hero()) {
    if (hero_ != NULL) hero_->::message::MsgHeroData::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CMsgHeroInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CMsgHeroInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.MsgHeroData hero = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CMsgHeroInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CMsgHeroInit)
  return false;
#undef DO_
}

void S2CMsgHeroInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CMsgHeroInit)
  // required .message.MsgHeroData hero = 1;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->hero_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CMsgHeroInit)
}

::google::protobuf::uint8* S2CMsgHeroInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CMsgHeroInit)
  // required .message.MsgHeroData hero = 1;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->hero_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CMsgHeroInit)
  return target;
}

int S2CMsgHeroInit::ByteSize() const {
  int total_size = 0;

  // required .message.MsgHeroData hero = 1;
  if (has_hero()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hero_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CMsgHeroInit::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CMsgHeroInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CMsgHeroInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CMsgHeroInit::MergeFrom(const S2CMsgHeroInit& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hero()) {
      mutable_hero()->::message::MsgHeroData::MergeFrom(from.hero());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CMsgHeroInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CMsgHeroInit::CopyFrom(const S2CMsgHeroInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CMsgHeroInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_hero()) {
    if (!this->hero_->IsInitialized()) return false;
  }
  return true;
}

void S2CMsgHeroInit::Swap(S2CMsgHeroInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CMsgHeroInit::InternalSwap(S2CMsgHeroInit* other) {
  std::swap(hero_, other->hero_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CMsgHeroInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CMsgHeroInit_descriptor_;
  metadata.reflection = S2CMsgHeroInit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CMsgHeroInit

// required .message.MsgHeroData hero = 1;
 bool S2CMsgHeroInit::has_hero() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CMsgHeroInit::set_has_hero() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CMsgHeroInit::clear_has_hero() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CMsgHeroInit::clear_hero() {
  if (hero_ != NULL) hero_->::message::MsgHeroData::Clear();
  clear_has_hero();
}
 const ::message::MsgHeroData& S2CMsgHeroInit::hero() const {
  // @@protoc_insertion_point(field_get:message.S2CMsgHeroInit.hero)
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
 ::message::MsgHeroData* S2CMsgHeroInit::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) {
    hero_ = new ::message::MsgHeroData;
  }
  // @@protoc_insertion_point(field_mutable:message.S2CMsgHeroInit.hero)
  return hero_;
}
 ::message::MsgHeroData* S2CMsgHeroInit::release_hero() {
  clear_has_hero();
  ::message::MsgHeroData* temp = hero_;
  hero_ = NULL;
  return temp;
}
 void S2CMsgHeroInit::set_allocated_hero(::message::MsgHeroData* hero) {
  delete hero_;
  hero_ = hero;
  if (hero) {
    set_has_hero();
  } else {
    clear_has_hero();
  }
  // @@protoc_insertion_point(field_set_allocated:message.S2CMsgHeroInit.hero)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CMsgHeroEquip::kEquipsFieldNumber;
const int S2CMsgHeroEquip::kEndFieldNumber;
const int S2CMsgHeroEquip::kBeginFieldNumber;
#endif  // !_MSC_VER

S2CMsgHeroEquip::S2CMsgHeroEquip()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CMsgHeroEquip)
}

void S2CMsgHeroEquip::InitAsDefaultInstance() {
}

S2CMsgHeroEquip::S2CMsgHeroEquip(const S2CMsgHeroEquip& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CMsgHeroEquip)
}

void S2CMsgHeroEquip::SharedCtor() {
  _cached_size_ = 0;
  end_ = false;
  begin_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CMsgHeroEquip::~S2CMsgHeroEquip() {
  // @@protoc_insertion_point(destructor:message.S2CMsgHeroEquip)
  SharedDtor();
}

void S2CMsgHeroEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CMsgHeroEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CMsgHeroEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CMsgHeroEquip_descriptor_;
}

const S2CMsgHeroEquip& S2CMsgHeroEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CMsgHeroEquip* S2CMsgHeroEquip::default_instance_ = NULL;

S2CMsgHeroEquip* S2CMsgHeroEquip::New(::google::protobuf::Arena* arena) const {
  S2CMsgHeroEquip* n = new S2CMsgHeroEquip;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CMsgHeroEquip::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CMsgHeroEquip*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(end_, begin_);

#undef ZR_HELPER_
#undef ZR_

  equips_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CMsgHeroEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CMsgHeroEquip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .message.MsgEquipData equips = 1;
      case 1: {
        if (tag == 10) {
         parse_equips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_equips;
        if (input->ExpectTag(16)) goto parse_end;
        break;
      }

      // required bool end = 2;
      case 2: {
        if (tag == 16) {
         parse_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &end_)));
          set_has_end();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_begin;
        break;
      }

      // required bool begin = 3;
      case 3: {
        if (tag == 24) {
         parse_begin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &begin_)));
          set_has_begin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CMsgHeroEquip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CMsgHeroEquip)
  return false;
#undef DO_
}

void S2CMsgHeroEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CMsgHeroEquip)
  // repeated .message.MsgEquipData equips = 1;
  for (unsigned int i = 0, n = this->equips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equips(i), output);
  }

  // required bool end = 2;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->end(), output);
  }

  // required bool begin = 3;
  if (has_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->begin(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CMsgHeroEquip)
}

::google::protobuf::uint8* S2CMsgHeroEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CMsgHeroEquip)
  // repeated .message.MsgEquipData equips = 1;
  for (unsigned int i = 0, n = this->equips_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equips(i), target);
  }

  // required bool end = 2;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->end(), target);
  }

  // required bool begin = 3;
  if (has_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->begin(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CMsgHeroEquip)
  return target;
}

int S2CMsgHeroEquip::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_end()) {
    // required bool end = 2;
    total_size += 1 + 1;
  }

  if (has_begin()) {
    // required bool begin = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
int S2CMsgHeroEquip::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required bool end = 2;
    total_size += 1 + 1;

    // required bool begin = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.MsgEquipData equips = 1;
  total_size += 1 * this->equips_size();
  for (int i = 0; i < this->equips_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equips(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CMsgHeroEquip::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CMsgHeroEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CMsgHeroEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CMsgHeroEquip::MergeFrom(const S2CMsgHeroEquip& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  equips_.MergeFrom(from.equips_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_end()) {
      set_end(from.end());
    }
    if (from.has_begin()) {
      set_begin(from.begin());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CMsgHeroEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CMsgHeroEquip::CopyFrom(const S2CMsgHeroEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CMsgHeroEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->equips())) return false;
  return true;
}

void S2CMsgHeroEquip::Swap(S2CMsgHeroEquip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CMsgHeroEquip::InternalSwap(S2CMsgHeroEquip* other) {
  equips_.UnsafeArenaSwap(&other->equips_);
  std::swap(end_, other->end_);
  std::swap(begin_, other->begin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CMsgHeroEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CMsgHeroEquip_descriptor_;
  metadata.reflection = S2CMsgHeroEquip_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CMsgHeroEquip

// repeated .message.MsgEquipData equips = 1;
 int S2CMsgHeroEquip::equips_size() const {
  return equips_.size();
}
 void S2CMsgHeroEquip::clear_equips() {
  equips_.Clear();
}
 const ::message::MsgEquipData& S2CMsgHeroEquip::equips(int index) const {
  // @@protoc_insertion_point(field_get:message.S2CMsgHeroEquip.equips)
  return equips_.Get(index);
}
 ::message::MsgEquipData* S2CMsgHeroEquip::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:message.S2CMsgHeroEquip.equips)
  return equips_.Mutable(index);
}
 ::message::MsgEquipData* S2CMsgHeroEquip::add_equips() {
  // @@protoc_insertion_point(field_add:message.S2CMsgHeroEquip.equips)
  return equips_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgEquipData >&
S2CMsgHeroEquip::equips() const {
  // @@protoc_insertion_point(field_list:message.S2CMsgHeroEquip.equips)
  return equips_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgEquipData >*
S2CMsgHeroEquip::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:message.S2CMsgHeroEquip.equips)
  return &equips_;
}

// required bool end = 2;
 bool S2CMsgHeroEquip::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void S2CMsgHeroEquip::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
 void S2CMsgHeroEquip::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
 void S2CMsgHeroEquip::clear_end() {
  end_ = false;
  clear_has_end();
}
 bool S2CMsgHeroEquip::end() const {
  // @@protoc_insertion_point(field_get:message.S2CMsgHeroEquip.end)
  return end_;
}
 void S2CMsgHeroEquip::set_end(bool value) {
  set_has_end();
  end_ = value;
  // @@protoc_insertion_point(field_set:message.S2CMsgHeroEquip.end)
}

// required bool begin = 3;
 bool S2CMsgHeroEquip::has_begin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void S2CMsgHeroEquip::set_has_begin() {
  _has_bits_[0] |= 0x00000004u;
}
 void S2CMsgHeroEquip::clear_has_begin() {
  _has_bits_[0] &= ~0x00000004u;
}
 void S2CMsgHeroEquip::clear_begin() {
  begin_ = false;
  clear_has_begin();
}
 bool S2CMsgHeroEquip::begin() const {
  // @@protoc_insertion_point(field_get:message.S2CMsgHeroEquip.begin)
  return begin_;
}
 void S2CMsgHeroEquip::set_begin(bool value) {
  set_has_begin();
  begin_ = value;
  // @@protoc_insertion_point(field_set:message.S2CMsgHeroEquip.begin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CMsgToyInit::kToysFieldNumber;
#endif  // !_MSC_VER

S2CMsgToyInit::S2CMsgToyInit()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CMsgToyInit)
}

void S2CMsgToyInit::InitAsDefaultInstance() {
}

S2CMsgToyInit::S2CMsgToyInit(const S2CMsgToyInit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CMsgToyInit)
}

void S2CMsgToyInit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CMsgToyInit::~S2CMsgToyInit() {
  // @@protoc_insertion_point(destructor:message.S2CMsgToyInit)
  SharedDtor();
}

void S2CMsgToyInit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CMsgToyInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CMsgToyInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CMsgToyInit_descriptor_;
}

const S2CMsgToyInit& S2CMsgToyInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CMsgToyInit* S2CMsgToyInit::default_instance_ = NULL;

S2CMsgToyInit* S2CMsgToyInit::New(::google::protobuf::Arena* arena) const {
  S2CMsgToyInit* n = new S2CMsgToyInit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CMsgToyInit::Clear() {
  toys_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CMsgToyInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CMsgToyInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .message.MsgToyBaseData toys = 1;
      case 1: {
        if (tag == 10) {
         parse_toys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_toys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_toys;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CMsgToyInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CMsgToyInit)
  return false;
#undef DO_
}

void S2CMsgToyInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CMsgToyInit)
  // repeated .message.MsgToyBaseData toys = 1;
  for (unsigned int i = 0, n = this->toys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->toys(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CMsgToyInit)
}

::google::protobuf::uint8* S2CMsgToyInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CMsgToyInit)
  // repeated .message.MsgToyBaseData toys = 1;
  for (unsigned int i = 0, n = this->toys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->toys(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CMsgToyInit)
  return target;
}

int S2CMsgToyInit::ByteSize() const {
  int total_size = 0;

  // repeated .message.MsgToyBaseData toys = 1;
  total_size += 1 * this->toys_size();
  for (int i = 0; i < this->toys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->toys(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CMsgToyInit::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CMsgToyInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CMsgToyInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CMsgToyInit::MergeFrom(const S2CMsgToyInit& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  toys_.MergeFrom(from.toys_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CMsgToyInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CMsgToyInit::CopyFrom(const S2CMsgToyInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CMsgToyInit::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->toys())) return false;
  return true;
}

void S2CMsgToyInit::Swap(S2CMsgToyInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CMsgToyInit::InternalSwap(S2CMsgToyInit* other) {
  toys_.UnsafeArenaSwap(&other->toys_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CMsgToyInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CMsgToyInit_descriptor_;
  metadata.reflection = S2CMsgToyInit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CMsgToyInit

// repeated .message.MsgToyBaseData toys = 1;
 int S2CMsgToyInit::toys_size() const {
  return toys_.size();
}
 void S2CMsgToyInit::clear_toys() {
  toys_.Clear();
}
 const ::message::MsgToyBaseData& S2CMsgToyInit::toys(int index) const {
  // @@protoc_insertion_point(field_get:message.S2CMsgToyInit.toys)
  return toys_.Get(index);
}
 ::message::MsgToyBaseData* S2CMsgToyInit::mutable_toys(int index) {
  // @@protoc_insertion_point(field_mutable:message.S2CMsgToyInit.toys)
  return toys_.Mutable(index);
}
 ::message::MsgToyBaseData* S2CMsgToyInit::add_toys() {
  // @@protoc_insertion_point(field_add:message.S2CMsgToyInit.toys)
  return toys_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgToyBaseData >&
S2CMsgToyInit::toys() const {
  // @@protoc_insertion_point(field_list:message.S2CMsgToyInit.toys)
  return toys_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgToyBaseData >*
S2CMsgToyInit::mutable_toys() {
  // @@protoc_insertion_point(field_mutable_list:message.S2CMsgToyInit.toys)
  return &toys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CMsgEquipInit::kEquipFieldNumber;
#endif  // !_MSC_VER

S2CMsgEquipInit::S2CMsgEquipInit()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CMsgEquipInit)
}

void S2CMsgEquipInit::InitAsDefaultInstance() {
  equip_ = const_cast< ::message::S2CMsgHeroEquip*>(&::message::S2CMsgHeroEquip::default_instance());
}

S2CMsgEquipInit::S2CMsgEquipInit(const S2CMsgEquipInit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CMsgEquipInit)
}

void S2CMsgEquipInit::SharedCtor() {
  _cached_size_ = 0;
  equip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CMsgEquipInit::~S2CMsgEquipInit() {
  // @@protoc_insertion_point(destructor:message.S2CMsgEquipInit)
  SharedDtor();
}

void S2CMsgEquipInit::SharedDtor() {
  if (this != default_instance_) {
    delete equip_;
  }
}

void S2CMsgEquipInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CMsgEquipInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CMsgEquipInit_descriptor_;
}

const S2CMsgEquipInit& S2CMsgEquipInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CMsgEquipInit* S2CMsgEquipInit::default_instance_ = NULL;

S2CMsgEquipInit* S2CMsgEquipInit::New(::google::protobuf::Arena* arena) const {
  S2CMsgEquipInit* n = new S2CMsgEquipInit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CMsgEquipInit::Clear() {
  if (has_equip()) {
    if (equip_ != NULL) equip_->::message::S2CMsgHeroEquip::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CMsgEquipInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CMsgEquipInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.S2CMsgHeroEquip equip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CMsgEquipInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CMsgEquipInit)
  return false;
#undef DO_
}

void S2CMsgEquipInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CMsgEquipInit)
  // required .message.S2CMsgHeroEquip equip = 1;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->equip_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CMsgEquipInit)
}

::google::protobuf::uint8* S2CMsgEquipInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CMsgEquipInit)
  // required .message.S2CMsgHeroEquip equip = 1;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->equip_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CMsgEquipInit)
  return target;
}

int S2CMsgEquipInit::ByteSize() const {
  int total_size = 0;

  // required .message.S2CMsgHeroEquip equip = 1;
  if (has_equip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->equip_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CMsgEquipInit::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CMsgEquipInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CMsgEquipInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CMsgEquipInit::MergeFrom(const S2CMsgEquipInit& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip()) {
      mutable_equip()->::message::S2CMsgHeroEquip::MergeFrom(from.equip());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CMsgEquipInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CMsgEquipInit::CopyFrom(const S2CMsgEquipInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CMsgEquipInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_equip()) {
    if (!this->equip_->IsInitialized()) return false;
  }
  return true;
}

void S2CMsgEquipInit::Swap(S2CMsgEquipInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CMsgEquipInit::InternalSwap(S2CMsgEquipInit* other) {
  std::swap(equip_, other->equip_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CMsgEquipInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CMsgEquipInit_descriptor_;
  metadata.reflection = S2CMsgEquipInit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CMsgEquipInit

// required .message.S2CMsgHeroEquip equip = 1;
 bool S2CMsgEquipInit::has_equip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CMsgEquipInit::set_has_equip() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CMsgEquipInit::clear_has_equip() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CMsgEquipInit::clear_equip() {
  if (equip_ != NULL) equip_->::message::S2CMsgHeroEquip::Clear();
  clear_has_equip();
}
 const ::message::S2CMsgHeroEquip& S2CMsgEquipInit::equip() const {
  // @@protoc_insertion_point(field_get:message.S2CMsgEquipInit.equip)
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
 ::message::S2CMsgHeroEquip* S2CMsgEquipInit::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) {
    equip_ = new ::message::S2CMsgHeroEquip;
  }
  // @@protoc_insertion_point(field_mutable:message.S2CMsgEquipInit.equip)
  return equip_;
}
 ::message::S2CMsgHeroEquip* S2CMsgEquipInit::release_equip() {
  clear_has_equip();
  ::message::S2CMsgHeroEquip* temp = equip_;
  equip_ = NULL;
  return temp;
}
 void S2CMsgEquipInit::set_allocated_equip(::message::S2CMsgHeroEquip* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
  // @@protoc_insertion_point(field_set_allocated:message.S2CMsgEquipInit.equip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int C2SModifySuitNameReq::kSuitIdFieldNumber;
const int C2SModifySuitNameReq::kSuitNameFieldNumber;
#endif  // !_MSC_VER

C2SModifySuitNameReq::C2SModifySuitNameReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C2SModifySuitNameReq)
}

void C2SModifySuitNameReq::InitAsDefaultInstance() {
}

C2SModifySuitNameReq::C2SModifySuitNameReq(const C2SModifySuitNameReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.C2SModifySuitNameReq)
}

void C2SModifySuitNameReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suit_id_ = 0;
  suit_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SModifySuitNameReq::~C2SModifySuitNameReq() {
  // @@protoc_insertion_point(destructor:message.C2SModifySuitNameReq)
  SharedDtor();
}

void C2SModifySuitNameReq::SharedDtor() {
  suit_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SModifySuitNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SModifySuitNameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SModifySuitNameReq_descriptor_;
}

const C2SModifySuitNameReq& C2SModifySuitNameReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

C2SModifySuitNameReq* C2SModifySuitNameReq::default_instance_ = NULL;

C2SModifySuitNameReq* C2SModifySuitNameReq::New(::google::protobuf::Arena* arena) const {
  C2SModifySuitNameReq* n = new C2SModifySuitNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SModifySuitNameReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    suit_id_ = 0;
    if (has_suit_name()) {
      suit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool C2SModifySuitNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C2SModifySuitNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 suit_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_id_)));
          set_has_suit_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_suit_name;
        break;
      }

      // required string suit_name = 2;
      case 2: {
        if (tag == 18) {
         parse_suit_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suit_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suit_name().data(), this->suit_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.C2SModifySuitNameReq.suit_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C2SModifySuitNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C2SModifySuitNameReq)
  return false;
#undef DO_
}

void C2SModifySuitNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C2SModifySuitNameReq)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->suit_id(), output);
  }

  // required string suit_name = 2;
  if (has_suit_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suit_name().data(), this->suit_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.C2SModifySuitNameReq.suit_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suit_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C2SModifySuitNameReq)
}

::google::protobuf::uint8* C2SModifySuitNameReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.C2SModifySuitNameReq)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->suit_id(), target);
  }

  // required string suit_name = 2;
  if (has_suit_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suit_name().data(), this->suit_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.C2SModifySuitNameReq.suit_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suit_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C2SModifySuitNameReq)
  return target;
}

int C2SModifySuitNameReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_suit_id()) {
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());
  }

  if (has_suit_name()) {
    // required string suit_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suit_name());
  }

  return total_size;
}
int C2SModifySuitNameReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());

    // required string suit_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suit_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SModifySuitNameReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const C2SModifySuitNameReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SModifySuitNameReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SModifySuitNameReq::MergeFrom(const C2SModifySuitNameReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_suit_id()) {
      set_suit_id(from.suit_id());
    }
    if (from.has_suit_name()) {
      set_has_suit_name();
      suit_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suit_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void C2SModifySuitNameReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SModifySuitNameReq::CopyFrom(const C2SModifySuitNameReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SModifySuitNameReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void C2SModifySuitNameReq::Swap(C2SModifySuitNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SModifySuitNameReq::InternalSwap(C2SModifySuitNameReq* other) {
  std::swap(suit_id_, other->suit_id_);
  suit_name_.Swap(&other->suit_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SModifySuitNameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SModifySuitNameReq_descriptor_;
  metadata.reflection = C2SModifySuitNameReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SModifySuitNameReq

// required int32 suit_id = 1;
 bool C2SModifySuitNameReq::has_suit_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void C2SModifySuitNameReq::set_has_suit_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void C2SModifySuitNameReq::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void C2SModifySuitNameReq::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
 ::google::protobuf::int32 C2SModifySuitNameReq::suit_id() const {
  // @@protoc_insertion_point(field_get:message.C2SModifySuitNameReq.suit_id)
  return suit_id_;
}
 void C2SModifySuitNameReq::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
  // @@protoc_insertion_point(field_set:message.C2SModifySuitNameReq.suit_id)
}

// required string suit_name = 2;
 bool C2SModifySuitNameReq::has_suit_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void C2SModifySuitNameReq::set_has_suit_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void C2SModifySuitNameReq::clear_has_suit_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void C2SModifySuitNameReq::clear_suit_name() {
  suit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suit_name();
}
 const ::std::string& C2SModifySuitNameReq::suit_name() const {
  // @@protoc_insertion_point(field_get:message.C2SModifySuitNameReq.suit_name)
  return suit_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SModifySuitNameReq::set_suit_name(const ::std::string& value) {
  set_has_suit_name();
  suit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C2SModifySuitNameReq.suit_name)
}
 void C2SModifySuitNameReq::set_suit_name(const char* value) {
  set_has_suit_name();
  suit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C2SModifySuitNameReq.suit_name)
}
 void C2SModifySuitNameReq::set_suit_name(const char* value, size_t size) {
  set_has_suit_name();
  suit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C2SModifySuitNameReq.suit_name)
}
 ::std::string* C2SModifySuitNameReq::mutable_suit_name() {
  set_has_suit_name();
  // @@protoc_insertion_point(field_mutable:message.C2SModifySuitNameReq.suit_name)
  return suit_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SModifySuitNameReq::release_suit_name() {
  clear_has_suit_name();
  return suit_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SModifySuitNameReq::set_allocated_suit_name(::std::string* suit_name) {
  if (suit_name != NULL) {
    set_has_suit_name();
  } else {
    clear_has_suit_name();
  }
  suit_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suit_name);
  // @@protoc_insertion_point(field_set_allocated:message.C2SModifySuitNameReq.suit_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CModifySuitNameACK::kSuitIdFieldNumber;
const int S2CModifySuitNameACK::kSuitNameFieldNumber;
#endif  // !_MSC_VER

S2CModifySuitNameACK::S2CModifySuitNameACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CModifySuitNameACK)
}

void S2CModifySuitNameACK::InitAsDefaultInstance() {
}

S2CModifySuitNameACK::S2CModifySuitNameACK(const S2CModifySuitNameACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CModifySuitNameACK)
}

void S2CModifySuitNameACK::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suit_id_ = 0;
  suit_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CModifySuitNameACK::~S2CModifySuitNameACK() {
  // @@protoc_insertion_point(destructor:message.S2CModifySuitNameACK)
  SharedDtor();
}

void S2CModifySuitNameACK::SharedDtor() {
  suit_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CModifySuitNameACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CModifySuitNameACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CModifySuitNameACK_descriptor_;
}

const S2CModifySuitNameACK& S2CModifySuitNameACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CModifySuitNameACK* S2CModifySuitNameACK::default_instance_ = NULL;

S2CModifySuitNameACK* S2CModifySuitNameACK::New(::google::protobuf::Arena* arena) const {
  S2CModifySuitNameACK* n = new S2CModifySuitNameACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CModifySuitNameACK::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    suit_id_ = 0;
    if (has_suit_name()) {
      suit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CModifySuitNameACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CModifySuitNameACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 suit_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_id_)));
          set_has_suit_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_suit_name;
        break;
      }

      // required string suit_name = 2;
      case 2: {
        if (tag == 18) {
         parse_suit_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suit_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suit_name().data(), this->suit_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.S2CModifySuitNameACK.suit_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CModifySuitNameACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CModifySuitNameACK)
  return false;
#undef DO_
}

void S2CModifySuitNameACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CModifySuitNameACK)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->suit_id(), output);
  }

  // required string suit_name = 2;
  if (has_suit_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suit_name().data(), this->suit_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.S2CModifySuitNameACK.suit_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suit_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CModifySuitNameACK)
}

::google::protobuf::uint8* S2CModifySuitNameACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CModifySuitNameACK)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->suit_id(), target);
  }

  // required string suit_name = 2;
  if (has_suit_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suit_name().data(), this->suit_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.S2CModifySuitNameACK.suit_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suit_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CModifySuitNameACK)
  return target;
}

int S2CModifySuitNameACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_suit_id()) {
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());
  }

  if (has_suit_name()) {
    // required string suit_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suit_name());
  }

  return total_size;
}
int S2CModifySuitNameACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());

    // required string suit_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suit_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CModifySuitNameACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CModifySuitNameACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CModifySuitNameACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CModifySuitNameACK::MergeFrom(const S2CModifySuitNameACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_suit_id()) {
      set_suit_id(from.suit_id());
    }
    if (from.has_suit_name()) {
      set_has_suit_name();
      suit_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suit_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CModifySuitNameACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CModifySuitNameACK::CopyFrom(const S2CModifySuitNameACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CModifySuitNameACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void S2CModifySuitNameACK::Swap(S2CModifySuitNameACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CModifySuitNameACK::InternalSwap(S2CModifySuitNameACK* other) {
  std::swap(suit_id_, other->suit_id_);
  suit_name_.Swap(&other->suit_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CModifySuitNameACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CModifySuitNameACK_descriptor_;
  metadata.reflection = S2CModifySuitNameACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CModifySuitNameACK

// required int32 suit_id = 1;
 bool S2CModifySuitNameACK::has_suit_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CModifySuitNameACK::set_has_suit_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CModifySuitNameACK::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CModifySuitNameACK::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
 ::google::protobuf::int32 S2CModifySuitNameACK::suit_id() const {
  // @@protoc_insertion_point(field_get:message.S2CModifySuitNameACK.suit_id)
  return suit_id_;
}
 void S2CModifySuitNameACK::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
  // @@protoc_insertion_point(field_set:message.S2CModifySuitNameACK.suit_id)
}

// required string suit_name = 2;
 bool S2CModifySuitNameACK::has_suit_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void S2CModifySuitNameACK::set_has_suit_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void S2CModifySuitNameACK::clear_has_suit_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void S2CModifySuitNameACK::clear_suit_name() {
  suit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suit_name();
}
 const ::std::string& S2CModifySuitNameACK::suit_name() const {
  // @@protoc_insertion_point(field_get:message.S2CModifySuitNameACK.suit_name)
  return suit_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CModifySuitNameACK::set_suit_name(const ::std::string& value) {
  set_has_suit_name();
  suit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.S2CModifySuitNameACK.suit_name)
}
 void S2CModifySuitNameACK::set_suit_name(const char* value) {
  set_has_suit_name();
  suit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.S2CModifySuitNameACK.suit_name)
}
 void S2CModifySuitNameACK::set_suit_name(const char* value, size_t size) {
  set_has_suit_name();
  suit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.S2CModifySuitNameACK.suit_name)
}
 ::std::string* S2CModifySuitNameACK::mutable_suit_name() {
  set_has_suit_name();
  // @@protoc_insertion_point(field_mutable:message.S2CModifySuitNameACK.suit_name)
  return suit_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CModifySuitNameACK::release_suit_name() {
  clear_has_suit_name();
  return suit_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CModifySuitNameACK::set_allocated_suit_name(::std::string* suit_name) {
  if (suit_name != NULL) {
    set_has_suit_name();
  } else {
    clear_has_suit_name();
  }
  suit_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suit_name);
  // @@protoc_insertion_point(field_set_allocated:message.S2CModifySuitNameACK.suit_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CModifySuitErrorACK::kSuitIdFieldNumber;
const int S2CModifySuitErrorACK::kErrorFieldNumber;
#endif  // !_MSC_VER

S2CModifySuitErrorACK::S2CModifySuitErrorACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CModifySuitErrorACK)
}

void S2CModifySuitErrorACK::InitAsDefaultInstance() {
}

S2CModifySuitErrorACK::S2CModifySuitErrorACK(const S2CModifySuitErrorACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CModifySuitErrorACK)
}

void S2CModifySuitErrorACK::SharedCtor() {
  _cached_size_ = 0;
  suit_id_ = 0;
  error_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CModifySuitErrorACK::~S2CModifySuitErrorACK() {
  // @@protoc_insertion_point(destructor:message.S2CModifySuitErrorACK)
  SharedDtor();
}

void S2CModifySuitErrorACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CModifySuitErrorACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CModifySuitErrorACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CModifySuitErrorACK_descriptor_;
}

const S2CModifySuitErrorACK& S2CModifySuitErrorACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CModifySuitErrorACK* S2CModifySuitErrorACK::default_instance_ = NULL;

S2CModifySuitErrorACK* S2CModifySuitErrorACK::New(::google::protobuf::Arena* arena) const {
  S2CModifySuitErrorACK* n = new S2CModifySuitErrorACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CModifySuitErrorACK::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CModifySuitErrorACK*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(suit_id_, error_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CModifySuitErrorACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CModifySuitErrorACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 suit_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_id_)));
          set_has_suit_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error;
        break;
      }

      // required .message.HeroErrorCode error = 2 [default = no_error];
      case 2: {
        if (tag == 16) {
         parse_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::HeroErrorCode_IsValid(value)) {
            set_error(static_cast< ::message::HeroErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CModifySuitErrorACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CModifySuitErrorACK)
  return false;
#undef DO_
}

void S2CModifySuitErrorACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CModifySuitErrorACK)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->suit_id(), output);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CModifySuitErrorACK)
}

::google::protobuf::uint8* S2CModifySuitErrorACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CModifySuitErrorACK)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->suit_id(), target);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CModifySuitErrorACK)
  return target;
}

int S2CModifySuitErrorACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_suit_id()) {
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());
  }

  if (has_error()) {
    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
int S2CModifySuitErrorACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());

    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CModifySuitErrorACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CModifySuitErrorACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CModifySuitErrorACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CModifySuitErrorACK::MergeFrom(const S2CModifySuitErrorACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_suit_id()) {
      set_suit_id(from.suit_id());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CModifySuitErrorACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CModifySuitErrorACK::CopyFrom(const S2CModifySuitErrorACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CModifySuitErrorACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void S2CModifySuitErrorACK::Swap(S2CModifySuitErrorACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CModifySuitErrorACK::InternalSwap(S2CModifySuitErrorACK* other) {
  std::swap(suit_id_, other->suit_id_);
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CModifySuitErrorACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CModifySuitErrorACK_descriptor_;
  metadata.reflection = S2CModifySuitErrorACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CModifySuitErrorACK

// required int32 suit_id = 1;
 bool S2CModifySuitErrorACK::has_suit_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CModifySuitErrorACK::set_has_suit_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CModifySuitErrorACK::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CModifySuitErrorACK::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
 ::google::protobuf::int32 S2CModifySuitErrorACK::suit_id() const {
  // @@protoc_insertion_point(field_get:message.S2CModifySuitErrorACK.suit_id)
  return suit_id_;
}
 void S2CModifySuitErrorACK::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
  // @@protoc_insertion_point(field_set:message.S2CModifySuitErrorACK.suit_id)
}

// required .message.HeroErrorCode error = 2 [default = no_error];
 bool S2CModifySuitErrorACK::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void S2CModifySuitErrorACK::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
 void S2CModifySuitErrorACK::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
 void S2CModifySuitErrorACK::clear_error() {
  error_ = 0;
  clear_has_error();
}
 ::message::HeroErrorCode S2CModifySuitErrorACK::error() const {
  // @@protoc_insertion_point(field_get:message.S2CModifySuitErrorACK.error)
  return static_cast< ::message::HeroErrorCode >(error_);
}
 void S2CModifySuitErrorACK::set_error(::message::HeroErrorCode value) {
  assert(::message::HeroErrorCode_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.S2CModifySuitErrorACK.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int C2SModifySuitReq::kDataFieldNumber;
#endif  // !_MSC_VER

C2SModifySuitReq::C2SModifySuitReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C2SModifySuitReq)
}

void C2SModifySuitReq::InitAsDefaultInstance() {
  data_ = const_cast< ::message::MsgSuitData*>(&::message::MsgSuitData::default_instance());
}

C2SModifySuitReq::C2SModifySuitReq(const C2SModifySuitReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.C2SModifySuitReq)
}

void C2SModifySuitReq::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SModifySuitReq::~C2SModifySuitReq() {
  // @@protoc_insertion_point(destructor:message.C2SModifySuitReq)
  SharedDtor();
}

void C2SModifySuitReq::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void C2SModifySuitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SModifySuitReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SModifySuitReq_descriptor_;
}

const C2SModifySuitReq& C2SModifySuitReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

C2SModifySuitReq* C2SModifySuitReq::default_instance_ = NULL;

C2SModifySuitReq* C2SModifySuitReq::New(::google::protobuf::Arena* arena) const {
  C2SModifySuitReq* n = new C2SModifySuitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SModifySuitReq::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::message::MsgSuitData::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool C2SModifySuitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C2SModifySuitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.MsgSuitData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C2SModifySuitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C2SModifySuitReq)
  return false;
#undef DO_
}

void C2SModifySuitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C2SModifySuitReq)
  // required .message.MsgSuitData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C2SModifySuitReq)
}

::google::protobuf::uint8* C2SModifySuitReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.C2SModifySuitReq)
  // required .message.MsgSuitData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C2SModifySuitReq)
  return target;
}

int C2SModifySuitReq::ByteSize() const {
  int total_size = 0;

  // required .message.MsgSuitData data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SModifySuitReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const C2SModifySuitReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SModifySuitReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SModifySuitReq::MergeFrom(const C2SModifySuitReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::MsgSuitData::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void C2SModifySuitReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SModifySuitReq::CopyFrom(const C2SModifySuitReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SModifySuitReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void C2SModifySuitReq::Swap(C2SModifySuitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SModifySuitReq::InternalSwap(C2SModifySuitReq* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SModifySuitReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SModifySuitReq_descriptor_;
  metadata.reflection = C2SModifySuitReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SModifySuitReq

// required .message.MsgSuitData data = 1;
 bool C2SModifySuitReq::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void C2SModifySuitReq::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void C2SModifySuitReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void C2SModifySuitReq::clear_data() {
  if (data_ != NULL) data_->::message::MsgSuitData::Clear();
  clear_has_data();
}
 const ::message::MsgSuitData& C2SModifySuitReq::data() const {
  // @@protoc_insertion_point(field_get:message.C2SModifySuitReq.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::MsgSuitData* C2SModifySuitReq::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::MsgSuitData;
  }
  // @@protoc_insertion_point(field_mutable:message.C2SModifySuitReq.data)
  return data_;
}
 ::message::MsgSuitData* C2SModifySuitReq::release_data() {
  clear_has_data();
  ::message::MsgSuitData* temp = data_;
  data_ = NULL;
  return temp;
}
 void C2SModifySuitReq::set_allocated_data(::message::MsgSuitData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.C2SModifySuitReq.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CModifySuitACK::kSuitIdFieldNumber;
const int S2CModifySuitACK::kErrorFieldNumber;
#endif  // !_MSC_VER

S2CModifySuitACK::S2CModifySuitACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CModifySuitACK)
}

void S2CModifySuitACK::InitAsDefaultInstance() {
}

S2CModifySuitACK::S2CModifySuitACK(const S2CModifySuitACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CModifySuitACK)
}

void S2CModifySuitACK::SharedCtor() {
  _cached_size_ = 0;
  suit_id_ = 0;
  error_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CModifySuitACK::~S2CModifySuitACK() {
  // @@protoc_insertion_point(destructor:message.S2CModifySuitACK)
  SharedDtor();
}

void S2CModifySuitACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CModifySuitACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CModifySuitACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CModifySuitACK_descriptor_;
}

const S2CModifySuitACK& S2CModifySuitACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CModifySuitACK* S2CModifySuitACK::default_instance_ = NULL;

S2CModifySuitACK* S2CModifySuitACK::New(::google::protobuf::Arena* arena) const {
  S2CModifySuitACK* n = new S2CModifySuitACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CModifySuitACK::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CModifySuitACK*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(suit_id_, error_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CModifySuitACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CModifySuitACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 suit_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_id_)));
          set_has_suit_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error;
        break;
      }

      // required .message.HeroErrorCode error = 2 [default = no_error];
      case 2: {
        if (tag == 16) {
         parse_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::HeroErrorCode_IsValid(value)) {
            set_error(static_cast< ::message::HeroErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CModifySuitACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CModifySuitACK)
  return false;
#undef DO_
}

void S2CModifySuitACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CModifySuitACK)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->suit_id(), output);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CModifySuitACK)
}

::google::protobuf::uint8* S2CModifySuitACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CModifySuitACK)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->suit_id(), target);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CModifySuitACK)
  return target;
}

int S2CModifySuitACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_suit_id()) {
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());
  }

  if (has_error()) {
    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
int S2CModifySuitACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());

    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CModifySuitACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CModifySuitACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CModifySuitACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CModifySuitACK::MergeFrom(const S2CModifySuitACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_suit_id()) {
      set_suit_id(from.suit_id());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CModifySuitACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CModifySuitACK::CopyFrom(const S2CModifySuitACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CModifySuitACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void S2CModifySuitACK::Swap(S2CModifySuitACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CModifySuitACK::InternalSwap(S2CModifySuitACK* other) {
  std::swap(suit_id_, other->suit_id_);
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CModifySuitACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CModifySuitACK_descriptor_;
  metadata.reflection = S2CModifySuitACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CModifySuitACK

// required int32 suit_id = 1;
 bool S2CModifySuitACK::has_suit_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CModifySuitACK::set_has_suit_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CModifySuitACK::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CModifySuitACK::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
 ::google::protobuf::int32 S2CModifySuitACK::suit_id() const {
  // @@protoc_insertion_point(field_get:message.S2CModifySuitACK.suit_id)
  return suit_id_;
}
 void S2CModifySuitACK::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
  // @@protoc_insertion_point(field_set:message.S2CModifySuitACK.suit_id)
}

// required .message.HeroErrorCode error = 2 [default = no_error];
 bool S2CModifySuitACK::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void S2CModifySuitACK::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
 void S2CModifySuitACK::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
 void S2CModifySuitACK::clear_error() {
  error_ = 0;
  clear_has_error();
}
 ::message::HeroErrorCode S2CModifySuitACK::error() const {
  // @@protoc_insertion_point(field_get:message.S2CModifySuitACK.error)
  return static_cast< ::message::HeroErrorCode >(error_);
}
 void S2CModifySuitACK::set_error(::message::HeroErrorCode value) {
  assert(::message::HeroErrorCode_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.S2CModifySuitACK.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int C2SDelSuitReq::kSuitIdFieldNumber;
#endif  // !_MSC_VER

C2SDelSuitReq::C2SDelSuitReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C2SDelSuitReq)
}

void C2SDelSuitReq::InitAsDefaultInstance() {
}

C2SDelSuitReq::C2SDelSuitReq(const C2SDelSuitReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.C2SDelSuitReq)
}

void C2SDelSuitReq::SharedCtor() {
  _cached_size_ = 0;
  suit_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SDelSuitReq::~C2SDelSuitReq() {
  // @@protoc_insertion_point(destructor:message.C2SDelSuitReq)
  SharedDtor();
}

void C2SDelSuitReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SDelSuitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SDelSuitReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SDelSuitReq_descriptor_;
}

const C2SDelSuitReq& C2SDelSuitReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

C2SDelSuitReq* C2SDelSuitReq::default_instance_ = NULL;

C2SDelSuitReq* C2SDelSuitReq::New(::google::protobuf::Arena* arena) const {
  C2SDelSuitReq* n = new C2SDelSuitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SDelSuitReq::Clear() {
  suit_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool C2SDelSuitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C2SDelSuitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 suit_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_id_)));
          set_has_suit_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C2SDelSuitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C2SDelSuitReq)
  return false;
#undef DO_
}

void C2SDelSuitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C2SDelSuitReq)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->suit_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C2SDelSuitReq)
}

::google::protobuf::uint8* C2SDelSuitReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.C2SDelSuitReq)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->suit_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C2SDelSuitReq)
  return target;
}

int C2SDelSuitReq::ByteSize() const {
  int total_size = 0;

  // required int32 suit_id = 1;
  if (has_suit_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SDelSuitReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const C2SDelSuitReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SDelSuitReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SDelSuitReq::MergeFrom(const C2SDelSuitReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_suit_id()) {
      set_suit_id(from.suit_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void C2SDelSuitReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDelSuitReq::CopyFrom(const C2SDelSuitReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDelSuitReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2SDelSuitReq::Swap(C2SDelSuitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SDelSuitReq::InternalSwap(C2SDelSuitReq* other) {
  std::swap(suit_id_, other->suit_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SDelSuitReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SDelSuitReq_descriptor_;
  metadata.reflection = C2SDelSuitReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SDelSuitReq

// required int32 suit_id = 1;
 bool C2SDelSuitReq::has_suit_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void C2SDelSuitReq::set_has_suit_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void C2SDelSuitReq::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void C2SDelSuitReq::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
 ::google::protobuf::int32 C2SDelSuitReq::suit_id() const {
  // @@protoc_insertion_point(field_get:message.C2SDelSuitReq.suit_id)
  return suit_id_;
}
 void C2SDelSuitReq::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
  // @@protoc_insertion_point(field_set:message.C2SDelSuitReq.suit_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CDelSuitACK::kSuitIdFieldNumber;
const int S2CDelSuitACK::kErrorFieldNumber;
#endif  // !_MSC_VER

S2CDelSuitACK::S2CDelSuitACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CDelSuitACK)
}

void S2CDelSuitACK::InitAsDefaultInstance() {
}

S2CDelSuitACK::S2CDelSuitACK(const S2CDelSuitACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CDelSuitACK)
}

void S2CDelSuitACK::SharedCtor() {
  _cached_size_ = 0;
  suit_id_ = 0;
  error_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CDelSuitACK::~S2CDelSuitACK() {
  // @@protoc_insertion_point(destructor:message.S2CDelSuitACK)
  SharedDtor();
}

void S2CDelSuitACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CDelSuitACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CDelSuitACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CDelSuitACK_descriptor_;
}

const S2CDelSuitACK& S2CDelSuitACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CDelSuitACK* S2CDelSuitACK::default_instance_ = NULL;

S2CDelSuitACK* S2CDelSuitACK::New(::google::protobuf::Arena* arena) const {
  S2CDelSuitACK* n = new S2CDelSuitACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CDelSuitACK::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CDelSuitACK*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(suit_id_, error_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CDelSuitACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CDelSuitACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 suit_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_id_)));
          set_has_suit_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error;
        break;
      }

      // required .message.HeroErrorCode error = 2 [default = no_error];
      case 2: {
        if (tag == 16) {
         parse_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::HeroErrorCode_IsValid(value)) {
            set_error(static_cast< ::message::HeroErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CDelSuitACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CDelSuitACK)
  return false;
#undef DO_
}

void S2CDelSuitACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CDelSuitACK)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->suit_id(), output);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CDelSuitACK)
}

::google::protobuf::uint8* S2CDelSuitACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CDelSuitACK)
  // required int32 suit_id = 1;
  if (has_suit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->suit_id(), target);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CDelSuitACK)
  return target;
}

int S2CDelSuitACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_suit_id()) {
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());
  }

  if (has_error()) {
    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
int S2CDelSuitACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 suit_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_id());

    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CDelSuitACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CDelSuitACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CDelSuitACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CDelSuitACK::MergeFrom(const S2CDelSuitACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_suit_id()) {
      set_suit_id(from.suit_id());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CDelSuitACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CDelSuitACK::CopyFrom(const S2CDelSuitACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CDelSuitACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void S2CDelSuitACK::Swap(S2CDelSuitACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CDelSuitACK::InternalSwap(S2CDelSuitACK* other) {
  std::swap(suit_id_, other->suit_id_);
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CDelSuitACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CDelSuitACK_descriptor_;
  metadata.reflection = S2CDelSuitACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CDelSuitACK

// required int32 suit_id = 1;
 bool S2CDelSuitACK::has_suit_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CDelSuitACK::set_has_suit_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CDelSuitACK::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CDelSuitACK::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
 ::google::protobuf::int32 S2CDelSuitACK::suit_id() const {
  // @@protoc_insertion_point(field_get:message.S2CDelSuitACK.suit_id)
  return suit_id_;
}
 void S2CDelSuitACK::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
  // @@protoc_insertion_point(field_set:message.S2CDelSuitACK.suit_id)
}

// required .message.HeroErrorCode error = 2 [default = no_error];
 bool S2CDelSuitACK::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void S2CDelSuitACK::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
 void S2CDelSuitACK::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
 void S2CDelSuitACK::clear_error() {
  error_ = 0;
  clear_has_error();
}
 ::message::HeroErrorCode S2CDelSuitACK::error() const {
  // @@protoc_insertion_point(field_get:message.S2CDelSuitACK.error)
  return static_cast< ::message::HeroErrorCode >(error_);
}
 void S2CDelSuitACK::set_error(::message::HeroErrorCode value) {
  assert(::message::HeroErrorCode_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.S2CDelSuitACK.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int C2SVerifyToyCDKeyReq::kCdKeyFieldNumber;
#endif  // !_MSC_VER

C2SVerifyToyCDKeyReq::C2SVerifyToyCDKeyReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C2SVerifyToyCDKeyReq)
}

void C2SVerifyToyCDKeyReq::InitAsDefaultInstance() {
}

C2SVerifyToyCDKeyReq::C2SVerifyToyCDKeyReq(const C2SVerifyToyCDKeyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.C2SVerifyToyCDKeyReq)
}

void C2SVerifyToyCDKeyReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cd_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2SVerifyToyCDKeyReq::~C2SVerifyToyCDKeyReq() {
  // @@protoc_insertion_point(destructor:message.C2SVerifyToyCDKeyReq)
  SharedDtor();
}

void C2SVerifyToyCDKeyReq::SharedDtor() {
  cd_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SVerifyToyCDKeyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SVerifyToyCDKeyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SVerifyToyCDKeyReq_descriptor_;
}

const C2SVerifyToyCDKeyReq& C2SVerifyToyCDKeyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

C2SVerifyToyCDKeyReq* C2SVerifyToyCDKeyReq::default_instance_ = NULL;

C2SVerifyToyCDKeyReq* C2SVerifyToyCDKeyReq::New(::google::protobuf::Arena* arena) const {
  C2SVerifyToyCDKeyReq* n = new C2SVerifyToyCDKeyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SVerifyToyCDKeyReq::Clear() {
  if (has_cd_key()) {
    cd_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool C2SVerifyToyCDKeyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C2SVerifyToyCDKeyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string cd_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cd_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cd_key().data(), this->cd_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.C2SVerifyToyCDKeyReq.cd_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C2SVerifyToyCDKeyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C2SVerifyToyCDKeyReq)
  return false;
#undef DO_
}

void C2SVerifyToyCDKeyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C2SVerifyToyCDKeyReq)
  // required string cd_key = 1;
  if (has_cd_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cd_key().data(), this->cd_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.C2SVerifyToyCDKeyReq.cd_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cd_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C2SVerifyToyCDKeyReq)
}

::google::protobuf::uint8* C2SVerifyToyCDKeyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.C2SVerifyToyCDKeyReq)
  // required string cd_key = 1;
  if (has_cd_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cd_key().data(), this->cd_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.C2SVerifyToyCDKeyReq.cd_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cd_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C2SVerifyToyCDKeyReq)
  return target;
}

int C2SVerifyToyCDKeyReq::ByteSize() const {
  int total_size = 0;

  // required string cd_key = 1;
  if (has_cd_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cd_key());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SVerifyToyCDKeyReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const C2SVerifyToyCDKeyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2SVerifyToyCDKeyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2SVerifyToyCDKeyReq::MergeFrom(const C2SVerifyToyCDKeyReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cd_key()) {
      set_has_cd_key();
      cd_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cd_key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void C2SVerifyToyCDKeyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SVerifyToyCDKeyReq::CopyFrom(const C2SVerifyToyCDKeyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SVerifyToyCDKeyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2SVerifyToyCDKeyReq::Swap(C2SVerifyToyCDKeyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SVerifyToyCDKeyReq::InternalSwap(C2SVerifyToyCDKeyReq* other) {
  cd_key_.Swap(&other->cd_key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SVerifyToyCDKeyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SVerifyToyCDKeyReq_descriptor_;
  metadata.reflection = C2SVerifyToyCDKeyReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SVerifyToyCDKeyReq

// required string cd_key = 1;
 bool C2SVerifyToyCDKeyReq::has_cd_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void C2SVerifyToyCDKeyReq::set_has_cd_key() {
  _has_bits_[0] |= 0x00000001u;
}
 void C2SVerifyToyCDKeyReq::clear_has_cd_key() {
  _has_bits_[0] &= ~0x00000001u;
}
 void C2SVerifyToyCDKeyReq::clear_cd_key() {
  cd_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cd_key();
}
 const ::std::string& C2SVerifyToyCDKeyReq::cd_key() const {
  // @@protoc_insertion_point(field_get:message.C2SVerifyToyCDKeyReq.cd_key)
  return cd_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SVerifyToyCDKeyReq::set_cd_key(const ::std::string& value) {
  set_has_cd_key();
  cd_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C2SVerifyToyCDKeyReq.cd_key)
}
 void C2SVerifyToyCDKeyReq::set_cd_key(const char* value) {
  set_has_cd_key();
  cd_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C2SVerifyToyCDKeyReq.cd_key)
}
 void C2SVerifyToyCDKeyReq::set_cd_key(const char* value, size_t size) {
  set_has_cd_key();
  cd_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C2SVerifyToyCDKeyReq.cd_key)
}
 ::std::string* C2SVerifyToyCDKeyReq::mutable_cd_key() {
  set_has_cd_key();
  // @@protoc_insertion_point(field_mutable:message.C2SVerifyToyCDKeyReq.cd_key)
  return cd_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SVerifyToyCDKeyReq::release_cd_key() {
  clear_has_cd_key();
  return cd_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SVerifyToyCDKeyReq::set_allocated_cd_key(::std::string* cd_key) {
  if (cd_key != NULL) {
    set_has_cd_key();
  } else {
    clear_has_cd_key();
  }
  cd_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cd_key);
  // @@protoc_insertion_point(field_set_allocated:message.C2SVerifyToyCDKeyReq.cd_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CVerifyToyCDKeyErrorACK::kCdKeyFieldNumber;
const int S2CVerifyToyCDKeyErrorACK::kErrorFieldNumber;
#endif  // !_MSC_VER

S2CVerifyToyCDKeyErrorACK::S2CVerifyToyCDKeyErrorACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CVerifyToyCDKeyErrorACK)
}

void S2CVerifyToyCDKeyErrorACK::InitAsDefaultInstance() {
}

S2CVerifyToyCDKeyErrorACK::S2CVerifyToyCDKeyErrorACK(const S2CVerifyToyCDKeyErrorACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CVerifyToyCDKeyErrorACK)
}

void S2CVerifyToyCDKeyErrorACK::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cd_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CVerifyToyCDKeyErrorACK::~S2CVerifyToyCDKeyErrorACK() {
  // @@protoc_insertion_point(destructor:message.S2CVerifyToyCDKeyErrorACK)
  SharedDtor();
}

void S2CVerifyToyCDKeyErrorACK::SharedDtor() {
  cd_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CVerifyToyCDKeyErrorACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CVerifyToyCDKeyErrorACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CVerifyToyCDKeyErrorACK_descriptor_;
}

const S2CVerifyToyCDKeyErrorACK& S2CVerifyToyCDKeyErrorACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CVerifyToyCDKeyErrorACK* S2CVerifyToyCDKeyErrorACK::default_instance_ = NULL;

S2CVerifyToyCDKeyErrorACK* S2CVerifyToyCDKeyErrorACK::New(::google::protobuf::Arena* arena) const {
  S2CVerifyToyCDKeyErrorACK* n = new S2CVerifyToyCDKeyErrorACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CVerifyToyCDKeyErrorACK::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_cd_key()) {
      cd_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    error_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CVerifyToyCDKeyErrorACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CVerifyToyCDKeyErrorACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string cd_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cd_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cd_key().data(), this->cd_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.S2CVerifyToyCDKeyErrorACK.cd_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error;
        break;
      }

      // required .message.HeroErrorCode error = 2 [default = no_error];
      case 2: {
        if (tag == 16) {
         parse_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::HeroErrorCode_IsValid(value)) {
            set_error(static_cast< ::message::HeroErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CVerifyToyCDKeyErrorACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CVerifyToyCDKeyErrorACK)
  return false;
#undef DO_
}

void S2CVerifyToyCDKeyErrorACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CVerifyToyCDKeyErrorACK)
  // required string cd_key = 1;
  if (has_cd_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cd_key().data(), this->cd_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.S2CVerifyToyCDKeyErrorACK.cd_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cd_key(), output);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CVerifyToyCDKeyErrorACK)
}

::google::protobuf::uint8* S2CVerifyToyCDKeyErrorACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CVerifyToyCDKeyErrorACK)
  // required string cd_key = 1;
  if (has_cd_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cd_key().data(), this->cd_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.S2CVerifyToyCDKeyErrorACK.cd_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cd_key(), target);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CVerifyToyCDKeyErrorACK)
  return target;
}

int S2CVerifyToyCDKeyErrorACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_cd_key()) {
    // required string cd_key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cd_key());
  }

  if (has_error()) {
    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
int S2CVerifyToyCDKeyErrorACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string cd_key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cd_key());

    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CVerifyToyCDKeyErrorACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CVerifyToyCDKeyErrorACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CVerifyToyCDKeyErrorACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CVerifyToyCDKeyErrorACK::MergeFrom(const S2CVerifyToyCDKeyErrorACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cd_key()) {
      set_has_cd_key();
      cd_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cd_key_);
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CVerifyToyCDKeyErrorACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CVerifyToyCDKeyErrorACK::CopyFrom(const S2CVerifyToyCDKeyErrorACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CVerifyToyCDKeyErrorACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void S2CVerifyToyCDKeyErrorACK::Swap(S2CVerifyToyCDKeyErrorACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CVerifyToyCDKeyErrorACK::InternalSwap(S2CVerifyToyCDKeyErrorACK* other) {
  cd_key_.Swap(&other->cd_key_);
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CVerifyToyCDKeyErrorACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CVerifyToyCDKeyErrorACK_descriptor_;
  metadata.reflection = S2CVerifyToyCDKeyErrorACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CVerifyToyCDKeyErrorACK

// required string cd_key = 1;
 bool S2CVerifyToyCDKeyErrorACK::has_cd_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CVerifyToyCDKeyErrorACK::set_has_cd_key() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CVerifyToyCDKeyErrorACK::clear_has_cd_key() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CVerifyToyCDKeyErrorACK::clear_cd_key() {
  cd_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cd_key();
}
 const ::std::string& S2CVerifyToyCDKeyErrorACK::cd_key() const {
  // @@protoc_insertion_point(field_get:message.S2CVerifyToyCDKeyErrorACK.cd_key)
  return cd_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CVerifyToyCDKeyErrorACK::set_cd_key(const ::std::string& value) {
  set_has_cd_key();
  cd_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.S2CVerifyToyCDKeyErrorACK.cd_key)
}
 void S2CVerifyToyCDKeyErrorACK::set_cd_key(const char* value) {
  set_has_cd_key();
  cd_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.S2CVerifyToyCDKeyErrorACK.cd_key)
}
 void S2CVerifyToyCDKeyErrorACK::set_cd_key(const char* value, size_t size) {
  set_has_cd_key();
  cd_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.S2CVerifyToyCDKeyErrorACK.cd_key)
}
 ::std::string* S2CVerifyToyCDKeyErrorACK::mutable_cd_key() {
  set_has_cd_key();
  // @@protoc_insertion_point(field_mutable:message.S2CVerifyToyCDKeyErrorACK.cd_key)
  return cd_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CVerifyToyCDKeyErrorACK::release_cd_key() {
  clear_has_cd_key();
  return cd_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CVerifyToyCDKeyErrorACK::set_allocated_cd_key(::std::string* cd_key) {
  if (cd_key != NULL) {
    set_has_cd_key();
  } else {
    clear_has_cd_key();
  }
  cd_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cd_key);
  // @@protoc_insertion_point(field_set_allocated:message.S2CVerifyToyCDKeyErrorACK.cd_key)
}

// required .message.HeroErrorCode error = 2 [default = no_error];
 bool S2CVerifyToyCDKeyErrorACK::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void S2CVerifyToyCDKeyErrorACK::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
 void S2CVerifyToyCDKeyErrorACK::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
 void S2CVerifyToyCDKeyErrorACK::clear_error() {
  error_ = 0;
  clear_has_error();
}
 ::message::HeroErrorCode S2CVerifyToyCDKeyErrorACK::error() const {
  // @@protoc_insertion_point(field_get:message.S2CVerifyToyCDKeyErrorACK.error)
  return static_cast< ::message::HeroErrorCode >(error_);
}
 void S2CVerifyToyCDKeyErrorACK::set_error(::message::HeroErrorCode value) {
  assert(::message::HeroErrorCode_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.S2CVerifyToyCDKeyErrorACK.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CVerifyToyCDKeyACK::kToyDataFieldNumber;
#endif  // !_MSC_VER

S2CVerifyToyCDKeyACK::S2CVerifyToyCDKeyACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CVerifyToyCDKeyACK)
}

void S2CVerifyToyCDKeyACK::InitAsDefaultInstance() {
  toydata_ = const_cast< ::message::MsgToyData*>(&::message::MsgToyData::default_instance());
}

S2CVerifyToyCDKeyACK::S2CVerifyToyCDKeyACK(const S2CVerifyToyCDKeyACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CVerifyToyCDKeyACK)
}

void S2CVerifyToyCDKeyACK::SharedCtor() {
  _cached_size_ = 0;
  toydata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CVerifyToyCDKeyACK::~S2CVerifyToyCDKeyACK() {
  // @@protoc_insertion_point(destructor:message.S2CVerifyToyCDKeyACK)
  SharedDtor();
}

void S2CVerifyToyCDKeyACK::SharedDtor() {
  if (this != default_instance_) {
    delete toydata_;
  }
}

void S2CVerifyToyCDKeyACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CVerifyToyCDKeyACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CVerifyToyCDKeyACK_descriptor_;
}

const S2CVerifyToyCDKeyACK& S2CVerifyToyCDKeyACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CVerifyToyCDKeyACK* S2CVerifyToyCDKeyACK::default_instance_ = NULL;

S2CVerifyToyCDKeyACK* S2CVerifyToyCDKeyACK::New(::google::protobuf::Arena* arena) const {
  S2CVerifyToyCDKeyACK* n = new S2CVerifyToyCDKeyACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CVerifyToyCDKeyACK::Clear() {
  if (has_toydata()) {
    if (toydata_ != NULL) toydata_->::message::MsgToyData::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CVerifyToyCDKeyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CVerifyToyCDKeyACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.MsgToyData ToyData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_toydata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CVerifyToyCDKeyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CVerifyToyCDKeyACK)
  return false;
#undef DO_
}

void S2CVerifyToyCDKeyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CVerifyToyCDKeyACK)
  // required .message.MsgToyData ToyData = 1;
  if (has_toydata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->toydata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CVerifyToyCDKeyACK)
}

::google::protobuf::uint8* S2CVerifyToyCDKeyACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CVerifyToyCDKeyACK)
  // required .message.MsgToyData ToyData = 1;
  if (has_toydata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->toydata_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CVerifyToyCDKeyACK)
  return target;
}

int S2CVerifyToyCDKeyACK::ByteSize() const {
  int total_size = 0;

  // required .message.MsgToyData ToyData = 1;
  if (has_toydata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->toydata_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CVerifyToyCDKeyACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CVerifyToyCDKeyACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CVerifyToyCDKeyACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CVerifyToyCDKeyACK::MergeFrom(const S2CVerifyToyCDKeyACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_toydata()) {
      mutable_toydata()->::message::MsgToyData::MergeFrom(from.toydata());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CVerifyToyCDKeyACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CVerifyToyCDKeyACK::CopyFrom(const S2CVerifyToyCDKeyACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CVerifyToyCDKeyACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_toydata()) {
    if (!this->toydata_->IsInitialized()) return false;
  }
  return true;
}

void S2CVerifyToyCDKeyACK::Swap(S2CVerifyToyCDKeyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CVerifyToyCDKeyACK::InternalSwap(S2CVerifyToyCDKeyACK* other) {
  std::swap(toydata_, other->toydata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CVerifyToyCDKeyACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CVerifyToyCDKeyACK_descriptor_;
  metadata.reflection = S2CVerifyToyCDKeyACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CVerifyToyCDKeyACK

// required .message.MsgToyData ToyData = 1;
 bool S2CVerifyToyCDKeyACK::has_toydata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CVerifyToyCDKeyACK::set_has_toydata() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CVerifyToyCDKeyACK::clear_has_toydata() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CVerifyToyCDKeyACK::clear_toydata() {
  if (toydata_ != NULL) toydata_->::message::MsgToyData::Clear();
  clear_has_toydata();
}
 const ::message::MsgToyData& S2CVerifyToyCDKeyACK::toydata() const {
  // @@protoc_insertion_point(field_get:message.S2CVerifyToyCDKeyACK.ToyData)
  return toydata_ != NULL ? *toydata_ : *default_instance_->toydata_;
}
 ::message::MsgToyData* S2CVerifyToyCDKeyACK::mutable_toydata() {
  set_has_toydata();
  if (toydata_ == NULL) {
    toydata_ = new ::message::MsgToyData;
  }
  // @@protoc_insertion_point(field_mutable:message.S2CVerifyToyCDKeyACK.ToyData)
  return toydata_;
}
 ::message::MsgToyData* S2CVerifyToyCDKeyACK::release_toydata() {
  clear_has_toydata();
  ::message::MsgToyData* temp = toydata_;
  toydata_ = NULL;
  return temp;
}
 void S2CVerifyToyCDKeyACK::set_allocated_toydata(::message::MsgToyData* toydata) {
  delete toydata_;
  toydata_ = toydata;
  if (toydata) {
    set_has_toydata();
  } else {
    clear_has_toydata();
  }
  // @@protoc_insertion_point(field_set_allocated:message.S2CVerifyToyCDKeyACK.ToyData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CEquipLevelUpReq::kEquipIdFieldNumber;
#endif  // !_MSC_VER

S2CEquipLevelUpReq::S2CEquipLevelUpReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CEquipLevelUpReq)
}

void S2CEquipLevelUpReq::InitAsDefaultInstance() {
}

S2CEquipLevelUpReq::S2CEquipLevelUpReq(const S2CEquipLevelUpReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CEquipLevelUpReq)
}

void S2CEquipLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  equip_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CEquipLevelUpReq::~S2CEquipLevelUpReq() {
  // @@protoc_insertion_point(destructor:message.S2CEquipLevelUpReq)
  SharedDtor();
}

void S2CEquipLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CEquipLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CEquipLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CEquipLevelUpReq_descriptor_;
}

const S2CEquipLevelUpReq& S2CEquipLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CEquipLevelUpReq* S2CEquipLevelUpReq::default_instance_ = NULL;

S2CEquipLevelUpReq* S2CEquipLevelUpReq::New(::google::protobuf::Arena* arena) const {
  S2CEquipLevelUpReq* n = new S2CEquipLevelUpReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CEquipLevelUpReq::Clear() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CEquipLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CEquipLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 equip_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &equip_id_)));
          set_has_equip_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CEquipLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CEquipLevelUpReq)
  return false;
#undef DO_
}

void S2CEquipLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CEquipLevelUpReq)
  // required uint64 equip_id = 1;
  if (has_equip_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->equip_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CEquipLevelUpReq)
}

::google::protobuf::uint8* S2CEquipLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CEquipLevelUpReq)
  // required uint64 equip_id = 1;
  if (has_equip_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->equip_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CEquipLevelUpReq)
  return target;
}

int S2CEquipLevelUpReq::ByteSize() const {
  int total_size = 0;

  // required uint64 equip_id = 1;
  if (has_equip_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->equip_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CEquipLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CEquipLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CEquipLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CEquipLevelUpReq::MergeFrom(const S2CEquipLevelUpReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip_id()) {
      set_equip_id(from.equip_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CEquipLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CEquipLevelUpReq::CopyFrom(const S2CEquipLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CEquipLevelUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void S2CEquipLevelUpReq::Swap(S2CEquipLevelUpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CEquipLevelUpReq::InternalSwap(S2CEquipLevelUpReq* other) {
  std::swap(equip_id_, other->equip_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CEquipLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CEquipLevelUpReq_descriptor_;
  metadata.reflection = S2CEquipLevelUpReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CEquipLevelUpReq

// required uint64 equip_id = 1;
 bool S2CEquipLevelUpReq::has_equip_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CEquipLevelUpReq::set_has_equip_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CEquipLevelUpReq::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CEquipLevelUpReq::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
 ::google::protobuf::uint64 S2CEquipLevelUpReq::equip_id() const {
  // @@protoc_insertion_point(field_get:message.S2CEquipLevelUpReq.equip_id)
  return equip_id_;
}
 void S2CEquipLevelUpReq::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
  // @@protoc_insertion_point(field_set:message.S2CEquipLevelUpReq.equip_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CEquipLevelUpACK::kEquipIdFieldNumber;
const int S2CEquipLevelUpACK::kLevelFieldNumber;
const int S2CEquipLevelUpACK::kGoldFieldNumber;
const int S2CEquipLevelUpACK::kCountFieldNumber;
const int S2CEquipLevelUpACK::kDiamandFieldNumber;
#endif  // !_MSC_VER

S2CEquipLevelUpACK::S2CEquipLevelUpACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CEquipLevelUpACK)
}

void S2CEquipLevelUpACK::InitAsDefaultInstance() {
}

S2CEquipLevelUpACK::S2CEquipLevelUpACK(const S2CEquipLevelUpACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CEquipLevelUpACK)
}

void S2CEquipLevelUpACK::SharedCtor() {
  _cached_size_ = 0;
  equip_id_ = GOOGLE_ULONGLONG(0);
  level_ = 0;
  gold_ = 0;
  count_ = 0;
  diamand_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CEquipLevelUpACK::~S2CEquipLevelUpACK() {
  // @@protoc_insertion_point(destructor:message.S2CEquipLevelUpACK)
  SharedDtor();
}

void S2CEquipLevelUpACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CEquipLevelUpACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CEquipLevelUpACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CEquipLevelUpACK_descriptor_;
}

const S2CEquipLevelUpACK& S2CEquipLevelUpACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CEquipLevelUpACK* S2CEquipLevelUpACK::default_instance_ = NULL;

S2CEquipLevelUpACK* S2CEquipLevelUpACK::New(::google::protobuf::Arena* arena) const {
  S2CEquipLevelUpACK* n = new S2CEquipLevelUpACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CEquipLevelUpACK::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CEquipLevelUpACK*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(equip_id_, diamand_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CEquipLevelUpACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CEquipLevelUpACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 equip_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &equip_id_)));
          set_has_equip_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required int32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gold;
        break;
      }

      // required int32 gold = 3;
      case 3: {
        if (tag == 24) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // required int32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_diamand;
        break;
      }

      // required int32 diamand = 5;
      case 5: {
        if (tag == 40) {
         parse_diamand:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diamand_)));
          set_has_diamand();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CEquipLevelUpACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CEquipLevelUpACK)
  return false;
#undef DO_
}

void S2CEquipLevelUpACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CEquipLevelUpACK)
  // required uint64 equip_id = 1;
  if (has_equip_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->equip_id(), output);
  }

  // required int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // required int32 gold = 3;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gold(), output);
  }

  // required int32 count = 4;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // required int32 diamand = 5;
  if (has_diamand()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->diamand(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CEquipLevelUpACK)
}

::google::protobuf::uint8* S2CEquipLevelUpACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CEquipLevelUpACK)
  // required uint64 equip_id = 1;
  if (has_equip_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->equip_id(), target);
  }

  // required int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // required int32 gold = 3;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gold(), target);
  }

  // required int32 count = 4;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  // required int32 diamand = 5;
  if (has_diamand()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->diamand(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CEquipLevelUpACK)
  return target;
}

int S2CEquipLevelUpACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_equip_id()) {
    // required uint64 equip_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->equip_id());
  }

  if (has_level()) {
    // required int32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_gold()) {
    // required int32 gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  if (has_count()) {
    // required int32 count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  if (has_diamand()) {
    // required int32 diamand = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->diamand());
  }

  return total_size;
}
int S2CEquipLevelUpACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint64 equip_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->equip_id());

    // required int32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());

    // required int32 count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

    // required int32 diamand = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->diamand());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CEquipLevelUpACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CEquipLevelUpACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CEquipLevelUpACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CEquipLevelUpACK::MergeFrom(const S2CEquipLevelUpACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip_id()) {
      set_equip_id(from.equip_id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_diamand()) {
      set_diamand(from.diamand());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CEquipLevelUpACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CEquipLevelUpACK::CopyFrom(const S2CEquipLevelUpACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CEquipLevelUpACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void S2CEquipLevelUpACK::Swap(S2CEquipLevelUpACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CEquipLevelUpACK::InternalSwap(S2CEquipLevelUpACK* other) {
  std::swap(equip_id_, other->equip_id_);
  std::swap(level_, other->level_);
  std::swap(gold_, other->gold_);
  std::swap(count_, other->count_);
  std::swap(diamand_, other->diamand_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CEquipLevelUpACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CEquipLevelUpACK_descriptor_;
  metadata.reflection = S2CEquipLevelUpACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CEquipLevelUpACK

// required uint64 equip_id = 1;
 bool S2CEquipLevelUpACK::has_equip_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CEquipLevelUpACK::set_has_equip_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CEquipLevelUpACK::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CEquipLevelUpACK::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
 ::google::protobuf::uint64 S2CEquipLevelUpACK::equip_id() const {
  // @@protoc_insertion_point(field_get:message.S2CEquipLevelUpACK.equip_id)
  return equip_id_;
}
 void S2CEquipLevelUpACK::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
  // @@protoc_insertion_point(field_set:message.S2CEquipLevelUpACK.equip_id)
}

// required int32 level = 2;
 bool S2CEquipLevelUpACK::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void S2CEquipLevelUpACK::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
 void S2CEquipLevelUpACK::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
 void S2CEquipLevelUpACK::clear_level() {
  level_ = 0;
  clear_has_level();
}
 ::google::protobuf::int32 S2CEquipLevelUpACK::level() const {
  // @@protoc_insertion_point(field_get:message.S2CEquipLevelUpACK.level)
  return level_;
}
 void S2CEquipLevelUpACK::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:message.S2CEquipLevelUpACK.level)
}

// required int32 gold = 3;
 bool S2CEquipLevelUpACK::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void S2CEquipLevelUpACK::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
 void S2CEquipLevelUpACK::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
 void S2CEquipLevelUpACK::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
 ::google::protobuf::int32 S2CEquipLevelUpACK::gold() const {
  // @@protoc_insertion_point(field_get:message.S2CEquipLevelUpACK.gold)
  return gold_;
}
 void S2CEquipLevelUpACK::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:message.S2CEquipLevelUpACK.gold)
}

// required int32 count = 4;
 bool S2CEquipLevelUpACK::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void S2CEquipLevelUpACK::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
 void S2CEquipLevelUpACK::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
 void S2CEquipLevelUpACK::clear_count() {
  count_ = 0;
  clear_has_count();
}
 ::google::protobuf::int32 S2CEquipLevelUpACK::count() const {
  // @@protoc_insertion_point(field_get:message.S2CEquipLevelUpACK.count)
  return count_;
}
 void S2CEquipLevelUpACK::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:message.S2CEquipLevelUpACK.count)
}

// required int32 diamand = 5;
 bool S2CEquipLevelUpACK::has_diamand() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void S2CEquipLevelUpACK::set_has_diamand() {
  _has_bits_[0] |= 0x00000010u;
}
 void S2CEquipLevelUpACK::clear_has_diamand() {
  _has_bits_[0] &= ~0x00000010u;
}
 void S2CEquipLevelUpACK::clear_diamand() {
  diamand_ = 0;
  clear_has_diamand();
}
 ::google::protobuf::int32 S2CEquipLevelUpACK::diamand() const {
  // @@protoc_insertion_point(field_get:message.S2CEquipLevelUpACK.diamand)
  return diamand_;
}
 void S2CEquipLevelUpACK::set_diamand(::google::protobuf::int32 value) {
  set_has_diamand();
  diamand_ = value;
  // @@protoc_insertion_point(field_set:message.S2CEquipLevelUpACK.diamand)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int S2CEquipLevelUpErrorACK::kEquipIdFieldNumber;
const int S2CEquipLevelUpErrorACK::kErrorFieldNumber;
#endif  // !_MSC_VER

S2CEquipLevelUpErrorACK::S2CEquipLevelUpErrorACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.S2CEquipLevelUpErrorACK)
}

void S2CEquipLevelUpErrorACK::InitAsDefaultInstance() {
}

S2CEquipLevelUpErrorACK::S2CEquipLevelUpErrorACK(const S2CEquipLevelUpErrorACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.S2CEquipLevelUpErrorACK)
}

void S2CEquipLevelUpErrorACK::SharedCtor() {
  _cached_size_ = 0;
  equip_id_ = GOOGLE_ULONGLONG(0);
  error_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2CEquipLevelUpErrorACK::~S2CEquipLevelUpErrorACK() {
  // @@protoc_insertion_point(destructor:message.S2CEquipLevelUpErrorACK)
  SharedDtor();
}

void S2CEquipLevelUpErrorACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CEquipLevelUpErrorACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CEquipLevelUpErrorACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CEquipLevelUpErrorACK_descriptor_;
}

const S2CEquipLevelUpErrorACK& S2CEquipLevelUpErrorACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dream_5fhero_2eproto();
  return *default_instance_;
}

S2CEquipLevelUpErrorACK* S2CEquipLevelUpErrorACK::default_instance_ = NULL;

S2CEquipLevelUpErrorACK* S2CEquipLevelUpErrorACK::New(::google::protobuf::Arena* arena) const {
  S2CEquipLevelUpErrorACK* n = new S2CEquipLevelUpErrorACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CEquipLevelUpErrorACK::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CEquipLevelUpErrorACK*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(equip_id_, error_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool S2CEquipLevelUpErrorACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.S2CEquipLevelUpErrorACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 equip_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &equip_id_)));
          set_has_equip_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error;
        break;
      }

      // required .message.HeroErrorCode error = 2 [default = no_error];
      case 2: {
        if (tag == 16) {
         parse_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::HeroErrorCode_IsValid(value)) {
            set_error(static_cast< ::message::HeroErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.S2CEquipLevelUpErrorACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.S2CEquipLevelUpErrorACK)
  return false;
#undef DO_
}

void S2CEquipLevelUpErrorACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.S2CEquipLevelUpErrorACK)
  // required uint64 equip_id = 1;
  if (has_equip_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->equip_id(), output);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.S2CEquipLevelUpErrorACK)
}

::google::protobuf::uint8* S2CEquipLevelUpErrorACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.S2CEquipLevelUpErrorACK)
  // required uint64 equip_id = 1;
  if (has_equip_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->equip_id(), target);
  }

  // required .message.HeroErrorCode error = 2 [default = no_error];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.S2CEquipLevelUpErrorACK)
  return target;
}

int S2CEquipLevelUpErrorACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_equip_id()) {
    // required uint64 equip_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->equip_id());
  }

  if (has_error()) {
    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
int S2CEquipLevelUpErrorACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 equip_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->equip_id());

    // required .message.HeroErrorCode error = 2 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CEquipLevelUpErrorACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const S2CEquipLevelUpErrorACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2CEquipLevelUpErrorACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2CEquipLevelUpErrorACK::MergeFrom(const S2CEquipLevelUpErrorACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip_id()) {
      set_equip_id(from.equip_id());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void S2CEquipLevelUpErrorACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CEquipLevelUpErrorACK::CopyFrom(const S2CEquipLevelUpErrorACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CEquipLevelUpErrorACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void S2CEquipLevelUpErrorACK::Swap(S2CEquipLevelUpErrorACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CEquipLevelUpErrorACK::InternalSwap(S2CEquipLevelUpErrorACK* other) {
  std::swap(equip_id_, other->equip_id_);
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CEquipLevelUpErrorACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CEquipLevelUpErrorACK_descriptor_;
  metadata.reflection = S2CEquipLevelUpErrorACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CEquipLevelUpErrorACK

// required uint64 equip_id = 1;
 bool S2CEquipLevelUpErrorACK::has_equip_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void S2CEquipLevelUpErrorACK::set_has_equip_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void S2CEquipLevelUpErrorACK::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void S2CEquipLevelUpErrorACK::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
 ::google::protobuf::uint64 S2CEquipLevelUpErrorACK::equip_id() const {
  // @@protoc_insertion_point(field_get:message.S2CEquipLevelUpErrorACK.equip_id)
  return equip_id_;
}
 void S2CEquipLevelUpErrorACK::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
  // @@protoc_insertion_point(field_set:message.S2CEquipLevelUpErrorACK.equip_id)
}

// required .message.HeroErrorCode error = 2 [default = no_error];
 bool S2CEquipLevelUpErrorACK::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void S2CEquipLevelUpErrorACK::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
 void S2CEquipLevelUpErrorACK::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
 void S2CEquipLevelUpErrorACK::clear_error() {
  error_ = 0;
  clear_has_error();
}
 ::message::HeroErrorCode S2CEquipLevelUpErrorACK::error() const {
  // @@protoc_insertion_point(field_get:message.S2CEquipLevelUpErrorACK.error)
  return static_cast< ::message::HeroErrorCode >(error_);
}
 void S2CEquipLevelUpErrorACK::set_error(::message::HeroErrorCode value) {
  assert(::message::HeroErrorCode_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.S2CEquipLevelUpErrorACK.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
