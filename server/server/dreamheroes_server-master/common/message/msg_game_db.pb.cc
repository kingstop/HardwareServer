// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_db.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_game_db.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* MsgReqHeroDataGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReqHeroDataGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHeroDataDB2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHeroDataDB2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNeedCreateHeroDB2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNeedCreateHeroDB2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSaveHeroDataGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSaveHeroDataGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSaveDataGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSaveDataGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSaveAllHeroesGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSaveAllHeroesGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSaveAllHeroesDB2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSaveAllHeroesDB2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgVerifyToyGS2DB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgVerifyToyGS2DB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgVerifyToyErrorDB2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgVerifyToyErrorDB2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgVerifyToyDB2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgVerifyToyDB2GS_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto() {
  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_game_db.proto");
  GOOGLE_CHECK(file != NULL);
  MsgReqHeroDataGS2DB_descriptor_ = file->message_type(0);
  static const int MsgReqHeroDataGS2DB_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqHeroDataGS2DB, account_),
  };
  MsgReqHeroDataGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgReqHeroDataGS2DB_descriptor_,
      MsgReqHeroDataGS2DB::default_instance_,
      MsgReqHeroDataGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqHeroDataGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgReqHeroDataGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReqHeroDataGS2DB, _internal_metadata_),
      -1);
  MsgHeroDataDB2GS_descriptor_ = file->message_type(1);
  static const int MsgHeroDataDB2GS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroDataDB2GS, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroDataDB2GS, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroDataDB2GS, equips_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroDataDB2GS, toys_),
  };
  MsgHeroDataDB2GS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgHeroDataDB2GS_descriptor_,
      MsgHeroDataDB2GS::default_instance_,
      MsgHeroDataDB2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroDataDB2GS, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgHeroDataDB2GS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHeroDataDB2GS, _internal_metadata_),
      -1);
  MsgNeedCreateHeroDB2GS_descriptor_ = file->message_type(2);
  static const int MsgNeedCreateHeroDB2GS_offsets_[1] = {
  };
  MsgNeedCreateHeroDB2GS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgNeedCreateHeroDB2GS_descriptor_,
      MsgNeedCreateHeroDB2GS::default_instance_,
      MsgNeedCreateHeroDB2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeedCreateHeroDB2GS, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgNeedCreateHeroDB2GS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeedCreateHeroDB2GS, _internal_metadata_),
      -1);
  MsgSaveHeroDataGS2DB_descriptor_ = file->message_type(3);
  static const int MsgSaveHeroDataGS2DB_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveHeroDataGS2DB, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveHeroDataGS2DB, data_),
  };
  MsgSaveHeroDataGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSaveHeroDataGS2DB_descriptor_,
      MsgSaveHeroDataGS2DB::default_instance_,
      MsgSaveHeroDataGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveHeroDataGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgSaveHeroDataGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveHeroDataGS2DB, _internal_metadata_),
      -1);
  MsgSaveDataGS2DB_descriptor_ = file->message_type(4);
  static const int MsgSaveDataGS2DB_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveDataGS2DB, sql_),
  };
  MsgSaveDataGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSaveDataGS2DB_descriptor_,
      MsgSaveDataGS2DB::default_instance_,
      MsgSaveDataGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveDataGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgSaveDataGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveDataGS2DB, _internal_metadata_),
      -1);
  MsgSaveAllHeroesGS2DB_descriptor_ = file->message_type(5);
  static const int MsgSaveAllHeroesGS2DB_offsets_[1] = {
  };
  MsgSaveAllHeroesGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSaveAllHeroesGS2DB_descriptor_,
      MsgSaveAllHeroesGS2DB::default_instance_,
      MsgSaveAllHeroesGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveAllHeroesGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgSaveAllHeroesGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveAllHeroesGS2DB, _internal_metadata_),
      -1);
  MsgSaveAllHeroesDB2GS_descriptor_ = file->message_type(6);
  static const int MsgSaveAllHeroesDB2GS_offsets_[1] = {
  };
  MsgSaveAllHeroesDB2GS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSaveAllHeroesDB2GS_descriptor_,
      MsgSaveAllHeroesDB2GS::default_instance_,
      MsgSaveAllHeroesDB2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveAllHeroesDB2GS, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgSaveAllHeroesDB2GS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveAllHeroesDB2GS, _internal_metadata_),
      -1);
  MsgVerifyToyGS2DB_descriptor_ = file->message_type(7);
  static const int MsgVerifyToyGS2DB_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyGS2DB, cdkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyGS2DB, account_),
  };
  MsgVerifyToyGS2DB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgVerifyToyGS2DB_descriptor_,
      MsgVerifyToyGS2DB::default_instance_,
      MsgVerifyToyGS2DB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyGS2DB, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgVerifyToyGS2DB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyGS2DB, _internal_metadata_),
      -1);
  MsgVerifyToyErrorDB2GS_descriptor_ = file->message_type(8);
  static const int MsgVerifyToyErrorDB2GS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyErrorDB2GS, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyErrorDB2GS, cdkey_),
  };
  MsgVerifyToyErrorDB2GS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgVerifyToyErrorDB2GS_descriptor_,
      MsgVerifyToyErrorDB2GS::default_instance_,
      MsgVerifyToyErrorDB2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyErrorDB2GS, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgVerifyToyErrorDB2GS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyErrorDB2GS, _internal_metadata_),
      -1);
  MsgVerifyToyDB2GS_descriptor_ = file->message_type(9);
  static const int MsgVerifyToyDB2GS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyDB2GS, toy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyDB2GS, account_),
  };
  MsgVerifyToyDB2GS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgVerifyToyDB2GS_descriptor_,
      MsgVerifyToyDB2GS::default_instance_,
      MsgVerifyToyDB2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyDB2GS, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgVerifyToyDB2GS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVerifyToyDB2GS, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fgame_5fdb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgReqHeroDataGS2DB_descriptor_, &MsgReqHeroDataGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgHeroDataDB2GS_descriptor_, &MsgHeroDataDB2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgNeedCreateHeroDB2GS_descriptor_, &MsgNeedCreateHeroDB2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSaveHeroDataGS2DB_descriptor_, &MsgSaveHeroDataGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSaveDataGS2DB_descriptor_, &MsgSaveDataGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSaveAllHeroesGS2DB_descriptor_, &MsgSaveAllHeroesGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSaveAllHeroesDB2GS_descriptor_, &MsgSaveAllHeroesDB2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgVerifyToyGS2DB_descriptor_, &MsgVerifyToyGS2DB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgVerifyToyErrorDB2GS_descriptor_, &MsgVerifyToyErrorDB2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgVerifyToyDB2GS_descriptor_, &MsgVerifyToyDB2GS::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto() {
  delete MsgReqHeroDataGS2DB::default_instance_;
  delete MsgReqHeroDataGS2DB_reflection_;
  delete MsgHeroDataDB2GS::default_instance_;
  delete MsgHeroDataDB2GS_reflection_;
  delete MsgNeedCreateHeroDB2GS::default_instance_;
  delete MsgNeedCreateHeroDB2GS_reflection_;
  delete MsgSaveHeroDataGS2DB::default_instance_;
  delete MsgSaveHeroDataGS2DB_reflection_;
  delete MsgSaveDataGS2DB::default_instance_;
  delete MsgSaveDataGS2DB_reflection_;
  delete MsgSaveAllHeroesGS2DB::default_instance_;
  delete MsgSaveAllHeroesGS2DB_reflection_;
  delete MsgSaveAllHeroesDB2GS::default_instance_;
  delete MsgSaveAllHeroesDB2GS_reflection_;
  delete MsgVerifyToyGS2DB::default_instance_;
  delete MsgVerifyToyGS2DB_reflection_;
  delete MsgVerifyToyErrorDB2GS::default_instance_;
  delete MsgVerifyToyErrorDB2GS_reflection_;
  delete MsgVerifyToyDB2GS::default_instance_;
  delete MsgVerifyToyDB2GS_reflection_;
}

void protobuf_AddDesc_msg_5fgame_5fdb_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::message::protobuf_AddDesc_common_2eproto();
  ::message::protobuf_AddDesc_dream_5fhero_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021msg_game_db.proto\022\007message\032\014common.pro"
    "to\032\020dream_hero.proto\"&\n\023MsgReqHeroDataGS"
    "2DB\022\017\n\007account\030\001 \002(\004\"\221\001\n\020MsgHeroDataDB2G"
    "S\022\017\n\007account\030\001 \002(\004\022\"\n\004Data\030\002 \002(\0132\024.messa"
    "ge.MsgHeroData\022%\n\006equips\030\003 \003(\0132\025.message"
    ".MsgEquipData\022!\n\004toys\030\004 \003(\0132\023.message.Ms"
    "gToyData\"\030\n\026MsgNeedCreateHeroDB2GS\"K\n\024Ms"
    "gSaveHeroDataGS2DB\022\017\n\007account\030\001 \002(\004\022\"\n\004D"
    "ata\030\002 \002(\0132\024.message.MsgHeroData\"\037\n\020MsgSa"
    "veDataGS2DB\022\013\n\003sql\030\001 \002(\014\"\027\n\025MsgSaveAllHe"
    "roesGS2DB\"\027\n\025MsgSaveAllHeroesDB2GS\"3\n\021Ms"
    "gVerifyToyGS2DB\022\r\n\005cdkey\030\001 \002(\t\022\017\n\007accoun"
    "t\030\002 \002(\004\"X\n\026MsgVerifyToyErrorDB2GS\022/\n\005err"
    "or\030\001 \002(\0162\026.message.HeroErrorCode:\010no_err"
    "or\022\r\n\005cdkey\030\002 \002(\t\"F\n\021MsgVerifyToyDB2GS\022 "
    "\n\003toy\030\001 \002(\0132\023.message.MsgToyData\022\017\n\007acco"
    "unt\030\002 \002(\004", 649);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_game_db.proto", &protobuf_RegisterTypes);
  MsgReqHeroDataGS2DB::default_instance_ = new MsgReqHeroDataGS2DB();
  MsgHeroDataDB2GS::default_instance_ = new MsgHeroDataDB2GS();
  MsgNeedCreateHeroDB2GS::default_instance_ = new MsgNeedCreateHeroDB2GS();
  MsgSaveHeroDataGS2DB::default_instance_ = new MsgSaveHeroDataGS2DB();
  MsgSaveDataGS2DB::default_instance_ = new MsgSaveDataGS2DB();
  MsgSaveAllHeroesGS2DB::default_instance_ = new MsgSaveAllHeroesGS2DB();
  MsgSaveAllHeroesDB2GS::default_instance_ = new MsgSaveAllHeroesDB2GS();
  MsgVerifyToyGS2DB::default_instance_ = new MsgVerifyToyGS2DB();
  MsgVerifyToyErrorDB2GS::default_instance_ = new MsgVerifyToyErrorDB2GS();
  MsgVerifyToyDB2GS::default_instance_ = new MsgVerifyToyDB2GS();
  MsgReqHeroDataGS2DB::default_instance_->InitAsDefaultInstance();
  MsgHeroDataDB2GS::default_instance_->InitAsDefaultInstance();
  MsgNeedCreateHeroDB2GS::default_instance_->InitAsDefaultInstance();
  MsgSaveHeroDataGS2DB::default_instance_->InitAsDefaultInstance();
  MsgSaveDataGS2DB::default_instance_->InitAsDefaultInstance();
  MsgSaveAllHeroesGS2DB::default_instance_->InitAsDefaultInstance();
  MsgSaveAllHeroesDB2GS::default_instance_->InitAsDefaultInstance();
  MsgVerifyToyGS2DB::default_instance_->InitAsDefaultInstance();
  MsgVerifyToyErrorDB2GS::default_instance_->InitAsDefaultInstance();
  MsgVerifyToyDB2GS::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fgame_5fdb_2eproto {
  StaticDescriptorInitializer_msg_5fgame_5fdb_2eproto() {
    protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  }
} static_descriptor_initializer_msg_5fgame_5fdb_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MsgReqHeroDataGS2DB::kAccountFieldNumber;
#endif  // !_MSC_VER

MsgReqHeroDataGS2DB::MsgReqHeroDataGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgReqHeroDataGS2DB)
}

void MsgReqHeroDataGS2DB::InitAsDefaultInstance() {
}

MsgReqHeroDataGS2DB::MsgReqHeroDataGS2DB(const MsgReqHeroDataGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgReqHeroDataGS2DB)
}

void MsgReqHeroDataGS2DB::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgReqHeroDataGS2DB::~MsgReqHeroDataGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgReqHeroDataGS2DB)
  SharedDtor();
}

void MsgReqHeroDataGS2DB::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgReqHeroDataGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReqHeroDataGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReqHeroDataGS2DB_descriptor_;
}

const MsgReqHeroDataGS2DB& MsgReqHeroDataGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgReqHeroDataGS2DB* MsgReqHeroDataGS2DB::default_instance_ = NULL;

MsgReqHeroDataGS2DB* MsgReqHeroDataGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgReqHeroDataGS2DB* n = new MsgReqHeroDataGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReqHeroDataGS2DB::Clear() {
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgReqHeroDataGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgReqHeroDataGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgReqHeroDataGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgReqHeroDataGS2DB)
  return false;
#undef DO_
}

void MsgReqHeroDataGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgReqHeroDataGS2DB)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgReqHeroDataGS2DB)
}

::google::protobuf::uint8* MsgReqHeroDataGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgReqHeroDataGS2DB)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgReqHeroDataGS2DB)
  return target;
}

int MsgReqHeroDataGS2DB::ByteSize() const {
  int total_size = 0;

  // required uint64 account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReqHeroDataGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgReqHeroDataGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgReqHeroDataGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgReqHeroDataGS2DB::MergeFrom(const MsgReqHeroDataGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgReqHeroDataGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReqHeroDataGS2DB::CopyFrom(const MsgReqHeroDataGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReqHeroDataGS2DB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgReqHeroDataGS2DB::Swap(MsgReqHeroDataGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReqHeroDataGS2DB::InternalSwap(MsgReqHeroDataGS2DB* other) {
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgReqHeroDataGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReqHeroDataGS2DB_descriptor_;
  metadata.reflection = MsgReqHeroDataGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReqHeroDataGS2DB

// required uint64 account = 1;
 bool MsgReqHeroDataGS2DB::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgReqHeroDataGS2DB::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgReqHeroDataGS2DB::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgReqHeroDataGS2DB::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 MsgReqHeroDataGS2DB::account() const {
  // @@protoc_insertion_point(field_get:message.MsgReqHeroDataGS2DB.account)
  return account_;
}
 void MsgReqHeroDataGS2DB::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.MsgReqHeroDataGS2DB.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgHeroDataDB2GS::kAccountFieldNumber;
const int MsgHeroDataDB2GS::kDataFieldNumber;
const int MsgHeroDataDB2GS::kEquipsFieldNumber;
const int MsgHeroDataDB2GS::kToysFieldNumber;
#endif  // !_MSC_VER

MsgHeroDataDB2GS::MsgHeroDataDB2GS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgHeroDataDB2GS)
}

void MsgHeroDataDB2GS::InitAsDefaultInstance() {
  data_ = const_cast< ::message::MsgHeroData*>(&::message::MsgHeroData::default_instance());
}

MsgHeroDataDB2GS::MsgHeroDataDB2GS(const MsgHeroDataDB2GS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgHeroDataDB2GS)
}

void MsgHeroDataDB2GS::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHeroDataDB2GS::~MsgHeroDataDB2GS() {
  // @@protoc_insertion_point(destructor:message.MsgHeroDataDB2GS)
  SharedDtor();
}

void MsgHeroDataDB2GS::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void MsgHeroDataDB2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHeroDataDB2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHeroDataDB2GS_descriptor_;
}

const MsgHeroDataDB2GS& MsgHeroDataDB2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgHeroDataDB2GS* MsgHeroDataDB2GS::default_instance_ = NULL;

MsgHeroDataDB2GS* MsgHeroDataDB2GS::New(::google::protobuf::Arena* arena) const {
  MsgHeroDataDB2GS* n = new MsgHeroDataDB2GS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgHeroDataDB2GS::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    account_ = GOOGLE_ULONGLONG(0);
    if (has_data()) {
      if (data_ != NULL) data_->::message::MsgHeroData::Clear();
    }
  }
  equips_.Clear();
  toys_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgHeroDataDB2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgHeroDataDB2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // required .message.MsgHeroData Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_equips;
        break;
      }

      // repeated .message.MsgEquipData equips = 3;
      case 3: {
        if (tag == 26) {
         parse_equips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_equips;
        if (input->ExpectTag(34)) goto parse_toys;
        break;
      }

      // repeated .message.MsgToyData toys = 4;
      case 4: {
        if (tag == 34) {
         parse_toys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_toys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_toys;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgHeroDataDB2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgHeroDataDB2GS)
  return false;
#undef DO_
}

void MsgHeroDataDB2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgHeroDataDB2GS)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  // required .message.MsgHeroData Data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // repeated .message.MsgEquipData equips = 3;
  for (unsigned int i = 0, n = this->equips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->equips(i), output);
  }

  // repeated .message.MsgToyData toys = 4;
  for (unsigned int i = 0, n = this->toys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->toys(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgHeroDataDB2GS)
}

::google::protobuf::uint8* MsgHeroDataDB2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgHeroDataDB2GS)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  // required .message.MsgHeroData Data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->data_, target);
  }

  // repeated .message.MsgEquipData equips = 3;
  for (unsigned int i = 0, n = this->equips_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->equips(i), target);
  }

  // repeated .message.MsgToyData toys = 4;
  for (unsigned int i = 0, n = this->toys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->toys(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgHeroDataDB2GS)
  return target;
}

int MsgHeroDataDB2GS::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_account()) {
    // required uint64 account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }

  if (has_data()) {
    // required .message.MsgHeroData Data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  return total_size;
}
int MsgHeroDataDB2GS::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());

    // required .message.MsgHeroData Data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.MsgEquipData equips = 3;
  total_size += 1 * this->equips_size();
  for (int i = 0; i < this->equips_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equips(i));
  }

  // repeated .message.MsgToyData toys = 4;
  total_size += 1 * this->toys_size();
  for (int i = 0; i < this->toys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->toys(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHeroDataDB2GS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgHeroDataDB2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHeroDataDB2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHeroDataDB2GS::MergeFrom(const MsgHeroDataDB2GS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  equips_.MergeFrom(from.equips_);
  toys_.MergeFrom(from.toys_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_data()) {
      mutable_data()->::message::MsgHeroData::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgHeroDataDB2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHeroDataDB2GS::CopyFrom(const MsgHeroDataDB2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeroDataDB2GS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->equips())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->toys())) return false;
  return true;
}

void MsgHeroDataDB2GS::Swap(MsgHeroDataDB2GS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHeroDataDB2GS::InternalSwap(MsgHeroDataDB2GS* other) {
  std::swap(account_, other->account_);
  std::swap(data_, other->data_);
  equips_.UnsafeArenaSwap(&other->equips_);
  toys_.UnsafeArenaSwap(&other->toys_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgHeroDataDB2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHeroDataDB2GS_descriptor_;
  metadata.reflection = MsgHeroDataDB2GS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgHeroDataDB2GS

// required uint64 account = 1;
 bool MsgHeroDataDB2GS::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgHeroDataDB2GS::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgHeroDataDB2GS::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgHeroDataDB2GS::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 MsgHeroDataDB2GS::account() const {
  // @@protoc_insertion_point(field_get:message.MsgHeroDataDB2GS.account)
  return account_;
}
 void MsgHeroDataDB2GS::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.MsgHeroDataDB2GS.account)
}

// required .message.MsgHeroData Data = 2;
 bool MsgHeroDataDB2GS::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgHeroDataDB2GS::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgHeroDataDB2GS::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgHeroDataDB2GS::clear_data() {
  if (data_ != NULL) data_->::message::MsgHeroData::Clear();
  clear_has_data();
}
 const ::message::MsgHeroData& MsgHeroDataDB2GS::data() const {
  // @@protoc_insertion_point(field_get:message.MsgHeroDataDB2GS.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::MsgHeroData* MsgHeroDataDB2GS::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::MsgHeroData;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgHeroDataDB2GS.Data)
  return data_;
}
 ::message::MsgHeroData* MsgHeroDataDB2GS::release_data() {
  clear_has_data();
  ::message::MsgHeroData* temp = data_;
  data_ = NULL;
  return temp;
}
 void MsgHeroDataDB2GS::set_allocated_data(::message::MsgHeroData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgHeroDataDB2GS.Data)
}

// repeated .message.MsgEquipData equips = 3;
 int MsgHeroDataDB2GS::equips_size() const {
  return equips_.size();
}
 void MsgHeroDataDB2GS::clear_equips() {
  equips_.Clear();
}
 const ::message::MsgEquipData& MsgHeroDataDB2GS::equips(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgHeroDataDB2GS.equips)
  return equips_.Get(index);
}
 ::message::MsgEquipData* MsgHeroDataDB2GS::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgHeroDataDB2GS.equips)
  return equips_.Mutable(index);
}
 ::message::MsgEquipData* MsgHeroDataDB2GS::add_equips() {
  // @@protoc_insertion_point(field_add:message.MsgHeroDataDB2GS.equips)
  return equips_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgEquipData >&
MsgHeroDataDB2GS::equips() const {
  // @@protoc_insertion_point(field_list:message.MsgHeroDataDB2GS.equips)
  return equips_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgEquipData >*
MsgHeroDataDB2GS::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgHeroDataDB2GS.equips)
  return &equips_;
}

// repeated .message.MsgToyData toys = 4;
 int MsgHeroDataDB2GS::toys_size() const {
  return toys_.size();
}
 void MsgHeroDataDB2GS::clear_toys() {
  toys_.Clear();
}
 const ::message::MsgToyData& MsgHeroDataDB2GS::toys(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgHeroDataDB2GS.toys)
  return toys_.Get(index);
}
 ::message::MsgToyData* MsgHeroDataDB2GS::mutable_toys(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgHeroDataDB2GS.toys)
  return toys_.Mutable(index);
}
 ::message::MsgToyData* MsgHeroDataDB2GS::add_toys() {
  // @@protoc_insertion_point(field_add:message.MsgHeroDataDB2GS.toys)
  return toys_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgToyData >&
MsgHeroDataDB2GS::toys() const {
  // @@protoc_insertion_point(field_list:message.MsgHeroDataDB2GS.toys)
  return toys_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgToyData >*
MsgHeroDataDB2GS::mutable_toys() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgHeroDataDB2GS.toys)
  return &toys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgNeedCreateHeroDB2GS::MsgNeedCreateHeroDB2GS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgNeedCreateHeroDB2GS)
}

void MsgNeedCreateHeroDB2GS::InitAsDefaultInstance() {
}

MsgNeedCreateHeroDB2GS::MsgNeedCreateHeroDB2GS(const MsgNeedCreateHeroDB2GS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgNeedCreateHeroDB2GS)
}

void MsgNeedCreateHeroDB2GS::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNeedCreateHeroDB2GS::~MsgNeedCreateHeroDB2GS() {
  // @@protoc_insertion_point(destructor:message.MsgNeedCreateHeroDB2GS)
  SharedDtor();
}

void MsgNeedCreateHeroDB2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNeedCreateHeroDB2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNeedCreateHeroDB2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNeedCreateHeroDB2GS_descriptor_;
}

const MsgNeedCreateHeroDB2GS& MsgNeedCreateHeroDB2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgNeedCreateHeroDB2GS* MsgNeedCreateHeroDB2GS::default_instance_ = NULL;

MsgNeedCreateHeroDB2GS* MsgNeedCreateHeroDB2GS::New(::google::protobuf::Arena* arena) const {
  MsgNeedCreateHeroDB2GS* n = new MsgNeedCreateHeroDB2GS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgNeedCreateHeroDB2GS::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgNeedCreateHeroDB2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgNeedCreateHeroDB2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgNeedCreateHeroDB2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgNeedCreateHeroDB2GS)
  return false;
#undef DO_
}

void MsgNeedCreateHeroDB2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgNeedCreateHeroDB2GS)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgNeedCreateHeroDB2GS)
}

::google::protobuf::uint8* MsgNeedCreateHeroDB2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgNeedCreateHeroDB2GS)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgNeedCreateHeroDB2GS)
  return target;
}

int MsgNeedCreateHeroDB2GS::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNeedCreateHeroDB2GS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgNeedCreateHeroDB2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNeedCreateHeroDB2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNeedCreateHeroDB2GS::MergeFrom(const MsgNeedCreateHeroDB2GS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgNeedCreateHeroDB2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNeedCreateHeroDB2GS::CopyFrom(const MsgNeedCreateHeroDB2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNeedCreateHeroDB2GS::IsInitialized() const {

  return true;
}

void MsgNeedCreateHeroDB2GS::Swap(MsgNeedCreateHeroDB2GS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgNeedCreateHeroDB2GS::InternalSwap(MsgNeedCreateHeroDB2GS* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgNeedCreateHeroDB2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNeedCreateHeroDB2GS_descriptor_;
  metadata.reflection = MsgNeedCreateHeroDB2GS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgNeedCreateHeroDB2GS

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgSaveHeroDataGS2DB::kAccountFieldNumber;
const int MsgSaveHeroDataGS2DB::kDataFieldNumber;
#endif  // !_MSC_VER

MsgSaveHeroDataGS2DB::MsgSaveHeroDataGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgSaveHeroDataGS2DB)
}

void MsgSaveHeroDataGS2DB::InitAsDefaultInstance() {
  data_ = const_cast< ::message::MsgHeroData*>(&::message::MsgHeroData::default_instance());
}

MsgSaveHeroDataGS2DB::MsgSaveHeroDataGS2DB(const MsgSaveHeroDataGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgSaveHeroDataGS2DB)
}

void MsgSaveHeroDataGS2DB::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSaveHeroDataGS2DB::~MsgSaveHeroDataGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgSaveHeroDataGS2DB)
  SharedDtor();
}

void MsgSaveHeroDataGS2DB::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void MsgSaveHeroDataGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSaveHeroDataGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSaveHeroDataGS2DB_descriptor_;
}

const MsgSaveHeroDataGS2DB& MsgSaveHeroDataGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgSaveHeroDataGS2DB* MsgSaveHeroDataGS2DB::default_instance_ = NULL;

MsgSaveHeroDataGS2DB* MsgSaveHeroDataGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgSaveHeroDataGS2DB* n = new MsgSaveHeroDataGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSaveHeroDataGS2DB::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    account_ = GOOGLE_ULONGLONG(0);
    if (has_data()) {
      if (data_ != NULL) data_->::message::MsgHeroData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgSaveHeroDataGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgSaveHeroDataGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // required .message.MsgHeroData Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgSaveHeroDataGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgSaveHeroDataGS2DB)
  return false;
#undef DO_
}

void MsgSaveHeroDataGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgSaveHeroDataGS2DB)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  // required .message.MsgHeroData Data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgSaveHeroDataGS2DB)
}

::google::protobuf::uint8* MsgSaveHeroDataGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgSaveHeroDataGS2DB)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  // required .message.MsgHeroData Data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->data_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgSaveHeroDataGS2DB)
  return target;
}

int MsgSaveHeroDataGS2DB::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_account()) {
    // required uint64 account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }

  if (has_data()) {
    // required .message.MsgHeroData Data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  return total_size;
}
int MsgSaveHeroDataGS2DB::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());

    // required .message.MsgHeroData Data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSaveHeroDataGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgSaveHeroDataGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSaveHeroDataGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSaveHeroDataGS2DB::MergeFrom(const MsgSaveHeroDataGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_data()) {
      mutable_data()->::message::MsgHeroData::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgSaveHeroDataGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSaveHeroDataGS2DB::CopyFrom(const MsgSaveHeroDataGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSaveHeroDataGS2DB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void MsgSaveHeroDataGS2DB::Swap(MsgSaveHeroDataGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSaveHeroDataGS2DB::InternalSwap(MsgSaveHeroDataGS2DB* other) {
  std::swap(account_, other->account_);
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSaveHeroDataGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSaveHeroDataGS2DB_descriptor_;
  metadata.reflection = MsgSaveHeroDataGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSaveHeroDataGS2DB

// required uint64 account = 1;
 bool MsgSaveHeroDataGS2DB::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgSaveHeroDataGS2DB::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgSaveHeroDataGS2DB::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgSaveHeroDataGS2DB::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 MsgSaveHeroDataGS2DB::account() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveHeroDataGS2DB.account)
  return account_;
}
 void MsgSaveHeroDataGS2DB::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.MsgSaveHeroDataGS2DB.account)
}

// required .message.MsgHeroData Data = 2;
 bool MsgSaveHeroDataGS2DB::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgSaveHeroDataGS2DB::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgSaveHeroDataGS2DB::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgSaveHeroDataGS2DB::clear_data() {
  if (data_ != NULL) data_->::message::MsgHeroData::Clear();
  clear_has_data();
}
 const ::message::MsgHeroData& MsgSaveHeroDataGS2DB::data() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveHeroDataGS2DB.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::MsgHeroData* MsgSaveHeroDataGS2DB::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::MsgHeroData;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgSaveHeroDataGS2DB.Data)
  return data_;
}
 ::message::MsgHeroData* MsgSaveHeroDataGS2DB::release_data() {
  clear_has_data();
  ::message::MsgHeroData* temp = data_;
  data_ = NULL;
  return temp;
}
 void MsgSaveHeroDataGS2DB::set_allocated_data(::message::MsgHeroData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgSaveHeroDataGS2DB.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgSaveDataGS2DB::kSqlFieldNumber;
#endif  // !_MSC_VER

MsgSaveDataGS2DB::MsgSaveDataGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgSaveDataGS2DB)
}

void MsgSaveDataGS2DB::InitAsDefaultInstance() {
}

MsgSaveDataGS2DB::MsgSaveDataGS2DB(const MsgSaveDataGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgSaveDataGS2DB)
}

void MsgSaveDataGS2DB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSaveDataGS2DB::~MsgSaveDataGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgSaveDataGS2DB)
  SharedDtor();
}

void MsgSaveDataGS2DB::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgSaveDataGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSaveDataGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSaveDataGS2DB_descriptor_;
}

const MsgSaveDataGS2DB& MsgSaveDataGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgSaveDataGS2DB* MsgSaveDataGS2DB::default_instance_ = NULL;

MsgSaveDataGS2DB* MsgSaveDataGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgSaveDataGS2DB* n = new MsgSaveDataGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSaveDataGS2DB::Clear() {
  if (has_sql()) {
    sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgSaveDataGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgSaveDataGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes sql = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sql()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgSaveDataGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgSaveDataGS2DB)
  return false;
#undef DO_
}

void MsgSaveDataGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgSaveDataGS2DB)
  // required bytes sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sql(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgSaveDataGS2DB)
}

::google::protobuf::uint8* MsgSaveDataGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgSaveDataGS2DB)
  // required bytes sql = 1;
  if (has_sql()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sql(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgSaveDataGS2DB)
  return target;
}

int MsgSaveDataGS2DB::ByteSize() const {
  int total_size = 0;

  // required bytes sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sql());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSaveDataGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgSaveDataGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSaveDataGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSaveDataGS2DB::MergeFrom(const MsgSaveDataGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sql()) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgSaveDataGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSaveDataGS2DB::CopyFrom(const MsgSaveDataGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSaveDataGS2DB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgSaveDataGS2DB::Swap(MsgSaveDataGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSaveDataGS2DB::InternalSwap(MsgSaveDataGS2DB* other) {
  sql_.Swap(&other->sql_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSaveDataGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSaveDataGS2DB_descriptor_;
  metadata.reflection = MsgSaveDataGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSaveDataGS2DB

// required bytes sql = 1;
 bool MsgSaveDataGS2DB::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgSaveDataGS2DB::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgSaveDataGS2DB::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgSaveDataGS2DB::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
 const ::std::string& MsgSaveDataGS2DB::sql() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveDataGS2DB.sql)
  return sql_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgSaveDataGS2DB::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgSaveDataGS2DB.sql)
}
 void MsgSaveDataGS2DB::set_sql(const char* value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgSaveDataGS2DB.sql)
}
 void MsgSaveDataGS2DB::set_sql(const void* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgSaveDataGS2DB.sql)
}
 ::std::string* MsgSaveDataGS2DB::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:message.MsgSaveDataGS2DB.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgSaveDataGS2DB::release_sql() {
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgSaveDataGS2DB::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:message.MsgSaveDataGS2DB.sql)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgSaveAllHeroesGS2DB::MsgSaveAllHeroesGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgSaveAllHeroesGS2DB)
}

void MsgSaveAllHeroesGS2DB::InitAsDefaultInstance() {
}

MsgSaveAllHeroesGS2DB::MsgSaveAllHeroesGS2DB(const MsgSaveAllHeroesGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgSaveAllHeroesGS2DB)
}

void MsgSaveAllHeroesGS2DB::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSaveAllHeroesGS2DB::~MsgSaveAllHeroesGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgSaveAllHeroesGS2DB)
  SharedDtor();
}

void MsgSaveAllHeroesGS2DB::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSaveAllHeroesGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSaveAllHeroesGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSaveAllHeroesGS2DB_descriptor_;
}

const MsgSaveAllHeroesGS2DB& MsgSaveAllHeroesGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgSaveAllHeroesGS2DB* MsgSaveAllHeroesGS2DB::default_instance_ = NULL;

MsgSaveAllHeroesGS2DB* MsgSaveAllHeroesGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgSaveAllHeroesGS2DB* n = new MsgSaveAllHeroesGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSaveAllHeroesGS2DB::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgSaveAllHeroesGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgSaveAllHeroesGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgSaveAllHeroesGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgSaveAllHeroesGS2DB)
  return false;
#undef DO_
}

void MsgSaveAllHeroesGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgSaveAllHeroesGS2DB)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgSaveAllHeroesGS2DB)
}

::google::protobuf::uint8* MsgSaveAllHeroesGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgSaveAllHeroesGS2DB)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgSaveAllHeroesGS2DB)
  return target;
}

int MsgSaveAllHeroesGS2DB::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSaveAllHeroesGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgSaveAllHeroesGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSaveAllHeroesGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSaveAllHeroesGS2DB::MergeFrom(const MsgSaveAllHeroesGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgSaveAllHeroesGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSaveAllHeroesGS2DB::CopyFrom(const MsgSaveAllHeroesGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSaveAllHeroesGS2DB::IsInitialized() const {

  return true;
}

void MsgSaveAllHeroesGS2DB::Swap(MsgSaveAllHeroesGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSaveAllHeroesGS2DB::InternalSwap(MsgSaveAllHeroesGS2DB* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSaveAllHeroesGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSaveAllHeroesGS2DB_descriptor_;
  metadata.reflection = MsgSaveAllHeroesGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSaveAllHeroesGS2DB

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgSaveAllHeroesDB2GS::MsgSaveAllHeroesDB2GS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgSaveAllHeroesDB2GS)
}

void MsgSaveAllHeroesDB2GS::InitAsDefaultInstance() {
}

MsgSaveAllHeroesDB2GS::MsgSaveAllHeroesDB2GS(const MsgSaveAllHeroesDB2GS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgSaveAllHeroesDB2GS)
}

void MsgSaveAllHeroesDB2GS::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSaveAllHeroesDB2GS::~MsgSaveAllHeroesDB2GS() {
  // @@protoc_insertion_point(destructor:message.MsgSaveAllHeroesDB2GS)
  SharedDtor();
}

void MsgSaveAllHeroesDB2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSaveAllHeroesDB2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSaveAllHeroesDB2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSaveAllHeroesDB2GS_descriptor_;
}

const MsgSaveAllHeroesDB2GS& MsgSaveAllHeroesDB2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgSaveAllHeroesDB2GS* MsgSaveAllHeroesDB2GS::default_instance_ = NULL;

MsgSaveAllHeroesDB2GS* MsgSaveAllHeroesDB2GS::New(::google::protobuf::Arena* arena) const {
  MsgSaveAllHeroesDB2GS* n = new MsgSaveAllHeroesDB2GS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSaveAllHeroesDB2GS::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgSaveAllHeroesDB2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgSaveAllHeroesDB2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgSaveAllHeroesDB2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgSaveAllHeroesDB2GS)
  return false;
#undef DO_
}

void MsgSaveAllHeroesDB2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgSaveAllHeroesDB2GS)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgSaveAllHeroesDB2GS)
}

::google::protobuf::uint8* MsgSaveAllHeroesDB2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgSaveAllHeroesDB2GS)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgSaveAllHeroesDB2GS)
  return target;
}

int MsgSaveAllHeroesDB2GS::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSaveAllHeroesDB2GS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgSaveAllHeroesDB2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSaveAllHeroesDB2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSaveAllHeroesDB2GS::MergeFrom(const MsgSaveAllHeroesDB2GS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgSaveAllHeroesDB2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSaveAllHeroesDB2GS::CopyFrom(const MsgSaveAllHeroesDB2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSaveAllHeroesDB2GS::IsInitialized() const {

  return true;
}

void MsgSaveAllHeroesDB2GS::Swap(MsgSaveAllHeroesDB2GS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSaveAllHeroesDB2GS::InternalSwap(MsgSaveAllHeroesDB2GS* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSaveAllHeroesDB2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSaveAllHeroesDB2GS_descriptor_;
  metadata.reflection = MsgSaveAllHeroesDB2GS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSaveAllHeroesDB2GS

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgVerifyToyGS2DB::kCdkeyFieldNumber;
const int MsgVerifyToyGS2DB::kAccountFieldNumber;
#endif  // !_MSC_VER

MsgVerifyToyGS2DB::MsgVerifyToyGS2DB()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgVerifyToyGS2DB)
}

void MsgVerifyToyGS2DB::InitAsDefaultInstance() {
}

MsgVerifyToyGS2DB::MsgVerifyToyGS2DB(const MsgVerifyToyGS2DB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgVerifyToyGS2DB)
}

void MsgVerifyToyGS2DB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cdkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgVerifyToyGS2DB::~MsgVerifyToyGS2DB() {
  // @@protoc_insertion_point(destructor:message.MsgVerifyToyGS2DB)
  SharedDtor();
}

void MsgVerifyToyGS2DB::SharedDtor() {
  cdkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgVerifyToyGS2DB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgVerifyToyGS2DB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgVerifyToyGS2DB_descriptor_;
}

const MsgVerifyToyGS2DB& MsgVerifyToyGS2DB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgVerifyToyGS2DB* MsgVerifyToyGS2DB::default_instance_ = NULL;

MsgVerifyToyGS2DB* MsgVerifyToyGS2DB::New(::google::protobuf::Arena* arena) const {
  MsgVerifyToyGS2DB* n = new MsgVerifyToyGS2DB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgVerifyToyGS2DB::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_cdkey()) {
      cdkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    account_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgVerifyToyGS2DB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgVerifyToyGS2DB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string cdkey = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cdkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cdkey().data(), this->cdkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgVerifyToyGS2DB.cdkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_account;
        break;
      }

      // required uint64 account = 2;
      case 2: {
        if (tag == 16) {
         parse_account:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgVerifyToyGS2DB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgVerifyToyGS2DB)
  return false;
#undef DO_
}

void MsgVerifyToyGS2DB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgVerifyToyGS2DB)
  // required string cdkey = 1;
  if (has_cdkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cdkey().data(), this->cdkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVerifyToyGS2DB.cdkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cdkey(), output);
  }

  // required uint64 account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgVerifyToyGS2DB)
}

::google::protobuf::uint8* MsgVerifyToyGS2DB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgVerifyToyGS2DB)
  // required string cdkey = 1;
  if (has_cdkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cdkey().data(), this->cdkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVerifyToyGS2DB.cdkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cdkey(), target);
  }

  // required uint64 account = 2;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgVerifyToyGS2DB)
  return target;
}

int MsgVerifyToyGS2DB::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_cdkey()) {
    // required string cdkey = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cdkey());
  }

  if (has_account()) {
    // required uint64 account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }

  return total_size;
}
int MsgVerifyToyGS2DB::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string cdkey = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cdkey());

    // required uint64 account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgVerifyToyGS2DB::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgVerifyToyGS2DB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgVerifyToyGS2DB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgVerifyToyGS2DB::MergeFrom(const MsgVerifyToyGS2DB& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cdkey()) {
      set_has_cdkey();
      cdkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cdkey_);
    }
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgVerifyToyGS2DB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgVerifyToyGS2DB::CopyFrom(const MsgVerifyToyGS2DB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgVerifyToyGS2DB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgVerifyToyGS2DB::Swap(MsgVerifyToyGS2DB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgVerifyToyGS2DB::InternalSwap(MsgVerifyToyGS2DB* other) {
  cdkey_.Swap(&other->cdkey_);
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgVerifyToyGS2DB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgVerifyToyGS2DB_descriptor_;
  metadata.reflection = MsgVerifyToyGS2DB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgVerifyToyGS2DB

// required string cdkey = 1;
 bool MsgVerifyToyGS2DB::has_cdkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgVerifyToyGS2DB::set_has_cdkey() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgVerifyToyGS2DB::clear_has_cdkey() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgVerifyToyGS2DB::clear_cdkey() {
  cdkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cdkey();
}
 const ::std::string& MsgVerifyToyGS2DB::cdkey() const {
  // @@protoc_insertion_point(field_get:message.MsgVerifyToyGS2DB.cdkey)
  return cdkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVerifyToyGS2DB::set_cdkey(const ::std::string& value) {
  set_has_cdkey();
  cdkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgVerifyToyGS2DB.cdkey)
}
 void MsgVerifyToyGS2DB::set_cdkey(const char* value) {
  set_has_cdkey();
  cdkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgVerifyToyGS2DB.cdkey)
}
 void MsgVerifyToyGS2DB::set_cdkey(const char* value, size_t size) {
  set_has_cdkey();
  cdkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgVerifyToyGS2DB.cdkey)
}
 ::std::string* MsgVerifyToyGS2DB::mutable_cdkey() {
  set_has_cdkey();
  // @@protoc_insertion_point(field_mutable:message.MsgVerifyToyGS2DB.cdkey)
  return cdkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgVerifyToyGS2DB::release_cdkey() {
  clear_has_cdkey();
  return cdkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVerifyToyGS2DB::set_allocated_cdkey(::std::string* cdkey) {
  if (cdkey != NULL) {
    set_has_cdkey();
  } else {
    clear_has_cdkey();
  }
  cdkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdkey);
  // @@protoc_insertion_point(field_set_allocated:message.MsgVerifyToyGS2DB.cdkey)
}

// required uint64 account = 2;
 bool MsgVerifyToyGS2DB::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgVerifyToyGS2DB::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgVerifyToyGS2DB::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgVerifyToyGS2DB::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 MsgVerifyToyGS2DB::account() const {
  // @@protoc_insertion_point(field_get:message.MsgVerifyToyGS2DB.account)
  return account_;
}
 void MsgVerifyToyGS2DB::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.MsgVerifyToyGS2DB.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgVerifyToyErrorDB2GS::kErrorFieldNumber;
const int MsgVerifyToyErrorDB2GS::kCdkeyFieldNumber;
#endif  // !_MSC_VER

MsgVerifyToyErrorDB2GS::MsgVerifyToyErrorDB2GS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgVerifyToyErrorDB2GS)
}

void MsgVerifyToyErrorDB2GS::InitAsDefaultInstance() {
}

MsgVerifyToyErrorDB2GS::MsgVerifyToyErrorDB2GS(const MsgVerifyToyErrorDB2GS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgVerifyToyErrorDB2GS)
}

void MsgVerifyToyErrorDB2GS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  error_ = 0;
  cdkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgVerifyToyErrorDB2GS::~MsgVerifyToyErrorDB2GS() {
  // @@protoc_insertion_point(destructor:message.MsgVerifyToyErrorDB2GS)
  SharedDtor();
}

void MsgVerifyToyErrorDB2GS::SharedDtor() {
  cdkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgVerifyToyErrorDB2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgVerifyToyErrorDB2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgVerifyToyErrorDB2GS_descriptor_;
}

const MsgVerifyToyErrorDB2GS& MsgVerifyToyErrorDB2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgVerifyToyErrorDB2GS* MsgVerifyToyErrorDB2GS::default_instance_ = NULL;

MsgVerifyToyErrorDB2GS* MsgVerifyToyErrorDB2GS::New(::google::protobuf::Arena* arena) const {
  MsgVerifyToyErrorDB2GS* n = new MsgVerifyToyErrorDB2GS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgVerifyToyErrorDB2GS::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    error_ = 0;
    if (has_cdkey()) {
      cdkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgVerifyToyErrorDB2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgVerifyToyErrorDB2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.HeroErrorCode error = 1 [default = no_error];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::HeroErrorCode_IsValid(value)) {
            set_error(static_cast< ::message::HeroErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cdkey;
        break;
      }

      // required string cdkey = 2;
      case 2: {
        if (tag == 18) {
         parse_cdkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cdkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cdkey().data(), this->cdkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgVerifyToyErrorDB2GS.cdkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgVerifyToyErrorDB2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgVerifyToyErrorDB2GS)
  return false;
#undef DO_
}

void MsgVerifyToyErrorDB2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgVerifyToyErrorDB2GS)
  // required .message.HeroErrorCode error = 1 [default = no_error];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error(), output);
  }

  // required string cdkey = 2;
  if (has_cdkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cdkey().data(), this->cdkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVerifyToyErrorDB2GS.cdkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cdkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgVerifyToyErrorDB2GS)
}

::google::protobuf::uint8* MsgVerifyToyErrorDB2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgVerifyToyErrorDB2GS)
  // required .message.HeroErrorCode error = 1 [default = no_error];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error(), target);
  }

  // required string cdkey = 2;
  if (has_cdkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cdkey().data(), this->cdkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgVerifyToyErrorDB2GS.cdkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cdkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgVerifyToyErrorDB2GS)
  return target;
}

int MsgVerifyToyErrorDB2GS::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_error()) {
    // required .message.HeroErrorCode error = 1 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  if (has_cdkey()) {
    // required string cdkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cdkey());
  }

  return total_size;
}
int MsgVerifyToyErrorDB2GS::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message.HeroErrorCode error = 1 [default = no_error];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

    // required string cdkey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cdkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgVerifyToyErrorDB2GS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgVerifyToyErrorDB2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgVerifyToyErrorDB2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgVerifyToyErrorDB2GS::MergeFrom(const MsgVerifyToyErrorDB2GS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_cdkey()) {
      set_has_cdkey();
      cdkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cdkey_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgVerifyToyErrorDB2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgVerifyToyErrorDB2GS::CopyFrom(const MsgVerifyToyErrorDB2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgVerifyToyErrorDB2GS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgVerifyToyErrorDB2GS::Swap(MsgVerifyToyErrorDB2GS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgVerifyToyErrorDB2GS::InternalSwap(MsgVerifyToyErrorDB2GS* other) {
  std::swap(error_, other->error_);
  cdkey_.Swap(&other->cdkey_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgVerifyToyErrorDB2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgVerifyToyErrorDB2GS_descriptor_;
  metadata.reflection = MsgVerifyToyErrorDB2GS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgVerifyToyErrorDB2GS

// required .message.HeroErrorCode error = 1 [default = no_error];
 bool MsgVerifyToyErrorDB2GS::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgVerifyToyErrorDB2GS::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgVerifyToyErrorDB2GS::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgVerifyToyErrorDB2GS::clear_error() {
  error_ = 0;
  clear_has_error();
}
 ::message::HeroErrorCode MsgVerifyToyErrorDB2GS::error() const {
  // @@protoc_insertion_point(field_get:message.MsgVerifyToyErrorDB2GS.error)
  return static_cast< ::message::HeroErrorCode >(error_);
}
 void MsgVerifyToyErrorDB2GS::set_error(::message::HeroErrorCode value) {
  assert(::message::HeroErrorCode_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.MsgVerifyToyErrorDB2GS.error)
}

// required string cdkey = 2;
 bool MsgVerifyToyErrorDB2GS::has_cdkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgVerifyToyErrorDB2GS::set_has_cdkey() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgVerifyToyErrorDB2GS::clear_has_cdkey() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgVerifyToyErrorDB2GS::clear_cdkey() {
  cdkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cdkey();
}
 const ::std::string& MsgVerifyToyErrorDB2GS::cdkey() const {
  // @@protoc_insertion_point(field_get:message.MsgVerifyToyErrorDB2GS.cdkey)
  return cdkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVerifyToyErrorDB2GS::set_cdkey(const ::std::string& value) {
  set_has_cdkey();
  cdkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgVerifyToyErrorDB2GS.cdkey)
}
 void MsgVerifyToyErrorDB2GS::set_cdkey(const char* value) {
  set_has_cdkey();
  cdkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgVerifyToyErrorDB2GS.cdkey)
}
 void MsgVerifyToyErrorDB2GS::set_cdkey(const char* value, size_t size) {
  set_has_cdkey();
  cdkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgVerifyToyErrorDB2GS.cdkey)
}
 ::std::string* MsgVerifyToyErrorDB2GS::mutable_cdkey() {
  set_has_cdkey();
  // @@protoc_insertion_point(field_mutable:message.MsgVerifyToyErrorDB2GS.cdkey)
  return cdkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgVerifyToyErrorDB2GS::release_cdkey() {
  clear_has_cdkey();
  return cdkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgVerifyToyErrorDB2GS::set_allocated_cdkey(::std::string* cdkey) {
  if (cdkey != NULL) {
    set_has_cdkey();
  } else {
    clear_has_cdkey();
  }
  cdkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdkey);
  // @@protoc_insertion_point(field_set_allocated:message.MsgVerifyToyErrorDB2GS.cdkey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgVerifyToyDB2GS::kToyFieldNumber;
const int MsgVerifyToyDB2GS::kAccountFieldNumber;
#endif  // !_MSC_VER

MsgVerifyToyDB2GS::MsgVerifyToyDB2GS()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgVerifyToyDB2GS)
}

void MsgVerifyToyDB2GS::InitAsDefaultInstance() {
  toy_ = const_cast< ::message::MsgToyData*>(&::message::MsgToyData::default_instance());
}

MsgVerifyToyDB2GS::MsgVerifyToyDB2GS(const MsgVerifyToyDB2GS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgVerifyToyDB2GS)
}

void MsgVerifyToyDB2GS::SharedCtor() {
  _cached_size_ = 0;
  toy_ = NULL;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgVerifyToyDB2GS::~MsgVerifyToyDB2GS() {
  // @@protoc_insertion_point(destructor:message.MsgVerifyToyDB2GS)
  SharedDtor();
}

void MsgVerifyToyDB2GS::SharedDtor() {
  if (this != default_instance_) {
    delete toy_;
  }
}

void MsgVerifyToyDB2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgVerifyToyDB2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgVerifyToyDB2GS_descriptor_;
}

const MsgVerifyToyDB2GS& MsgVerifyToyDB2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

MsgVerifyToyDB2GS* MsgVerifyToyDB2GS::default_instance_ = NULL;

MsgVerifyToyDB2GS* MsgVerifyToyDB2GS::New(::google::protobuf::Arena* arena) const {
  MsgVerifyToyDB2GS* n = new MsgVerifyToyDB2GS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgVerifyToyDB2GS::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_toy()) {
      if (toy_ != NULL) toy_->::message::MsgToyData::Clear();
    }
    account_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgVerifyToyDB2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgVerifyToyDB2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.MsgToyData toy = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_toy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_account;
        break;
      }

      // required uint64 account = 2;
      case 2: {
        if (tag == 16) {
         parse_account:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgVerifyToyDB2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgVerifyToyDB2GS)
  return false;
#undef DO_
}

void MsgVerifyToyDB2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgVerifyToyDB2GS)
  // required .message.MsgToyData toy = 1;
  if (has_toy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->toy_, output);
  }

  // required uint64 account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgVerifyToyDB2GS)
}

::google::protobuf::uint8* MsgVerifyToyDB2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgVerifyToyDB2GS)
  // required .message.MsgToyData toy = 1;
  if (has_toy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->toy_, target);
  }

  // required uint64 account = 2;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgVerifyToyDB2GS)
  return target;
}

int MsgVerifyToyDB2GS::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_toy()) {
    // required .message.MsgToyData toy = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->toy_);
  }

  if (has_account()) {
    // required uint64 account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }

  return total_size;
}
int MsgVerifyToyDB2GS::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message.MsgToyData toy = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->toy_);

    // required uint64 account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgVerifyToyDB2GS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgVerifyToyDB2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgVerifyToyDB2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgVerifyToyDB2GS::MergeFrom(const MsgVerifyToyDB2GS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_toy()) {
      mutable_toy()->::message::MsgToyData::MergeFrom(from.toy());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgVerifyToyDB2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgVerifyToyDB2GS::CopyFrom(const MsgVerifyToyDB2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgVerifyToyDB2GS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_toy()) {
    if (!this->toy_->IsInitialized()) return false;
  }
  return true;
}

void MsgVerifyToyDB2GS::Swap(MsgVerifyToyDB2GS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgVerifyToyDB2GS::InternalSwap(MsgVerifyToyDB2GS* other) {
  std::swap(toy_, other->toy_);
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgVerifyToyDB2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgVerifyToyDB2GS_descriptor_;
  metadata.reflection = MsgVerifyToyDB2GS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgVerifyToyDB2GS

// required .message.MsgToyData toy = 1;
 bool MsgVerifyToyDB2GS::has_toy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgVerifyToyDB2GS::set_has_toy() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgVerifyToyDB2GS::clear_has_toy() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgVerifyToyDB2GS::clear_toy() {
  if (toy_ != NULL) toy_->::message::MsgToyData::Clear();
  clear_has_toy();
}
 const ::message::MsgToyData& MsgVerifyToyDB2GS::toy() const {
  // @@protoc_insertion_point(field_get:message.MsgVerifyToyDB2GS.toy)
  return toy_ != NULL ? *toy_ : *default_instance_->toy_;
}
 ::message::MsgToyData* MsgVerifyToyDB2GS::mutable_toy() {
  set_has_toy();
  if (toy_ == NULL) {
    toy_ = new ::message::MsgToyData;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgVerifyToyDB2GS.toy)
  return toy_;
}
 ::message::MsgToyData* MsgVerifyToyDB2GS::release_toy() {
  clear_has_toy();
  ::message::MsgToyData* temp = toy_;
  toy_ = NULL;
  return temp;
}
 void MsgVerifyToyDB2GS::set_allocated_toy(::message::MsgToyData* toy) {
  delete toy_;
  toy_ = toy;
  if (toy) {
    set_has_toy();
  } else {
    clear_has_toy();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgVerifyToyDB2GS.toy)
}

// required uint64 account = 2;
 bool MsgVerifyToyDB2GS::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgVerifyToyDB2GS::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgVerifyToyDB2GS::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgVerifyToyDB2GS::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 MsgVerifyToyDB2GS::account() const {
  // @@protoc_insertion_point(field_get:message.MsgVerifyToyDB2GS.account)
  return account_;
}
 void MsgVerifyToyDB2GS::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.MsgVerifyToyDB2GS.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
