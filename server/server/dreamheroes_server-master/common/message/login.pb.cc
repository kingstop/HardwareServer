// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* LoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegisterAccountRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegisterAccountRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegisterAccountFaildACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegisterAccountFaildACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientExit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientExit_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* enumLoginResult_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_login_2eproto() {
  protobuf_AddDesc_login_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "login.proto");
  GOOGLE_CHECK(file != NULL);
  LoginRequest_descriptor_ = file->message_type(0);
  static const int LoginRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, pwd_),
  };
  LoginRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRequest_descriptor_,
      LoginRequest::default_instance_,
      LoginRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _internal_metadata_),
      -1);
  RegisterAccountRequest_descriptor_ = file->message_type(1);
  static const int RegisterAccountRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAccountRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAccountRequest, pwd_),
  };
  RegisterAccountRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegisterAccountRequest_descriptor_,
      RegisterAccountRequest::default_instance_,
      RegisterAccountRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAccountRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(RegisterAccountRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAccountRequest, _internal_metadata_),
      -1);
  RegisterAccountFaildACK_descriptor_ = file->message_type(2);
  static const int RegisterAccountFaildACK_offsets_[1] = {
  };
  RegisterAccountFaildACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegisterAccountFaildACK_descriptor_,
      RegisterAccountFaildACK::default_instance_,
      RegisterAccountFaildACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAccountFaildACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(RegisterAccountFaildACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAccountFaildACK, _internal_metadata_),
      -1);
  LoginResponse_descriptor_ = file->message_type(3);
  static const int LoginResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, gate_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, gate_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, user_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, chartype_),
  };
  LoginResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginResponse_descriptor_,
      LoginResponse::default_instance_,
      LoginResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _internal_metadata_),
      -1);
  LoginGame_descriptor_ = file->message_type(4);
  static const int LoginGame_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginGame, user_account_),
  };
  LoginGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginGame_descriptor_,
      LoginGame::default_instance_,
      LoginGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginGame, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginGame, _internal_metadata_),
      -1);
  ClientExit_descriptor_ = file->message_type(5);
  static const int ClientExit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientExit, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientExit, user_account_),
  };
  ClientExit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientExit_descriptor_,
      ClientExit::default_instance_,
      ClientExit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientExit, _has_bits_[0]),
      -1,
      -1,
      sizeof(ClientExit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientExit, _internal_metadata_),
      -1);
  enumLoginResult_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_login_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRequest_descriptor_, &LoginRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegisterAccountRequest_descriptor_, &RegisterAccountRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegisterAccountFaildACK_descriptor_, &RegisterAccountFaildACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginResponse_descriptor_, &LoginResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginGame_descriptor_, &LoginGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientExit_descriptor_, &ClientExit::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_login_2eproto() {
  delete LoginRequest::default_instance_;
  delete LoginRequest_reflection_;
  delete RegisterAccountRequest::default_instance_;
  delete RegisterAccountRequest_reflection_;
  delete RegisterAccountFaildACK::default_instance_;
  delete RegisterAccountFaildACK_reflection_;
  delete LoginResponse::default_instance_;
  delete LoginResponse_reflection_;
  delete LoginGame::default_instance_;
  delete LoginGame_reflection_;
  delete ClientExit::default_instance_;
  delete ClientExit_reflection_;
}

void protobuf_AddDesc_login_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::message::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013login.proto\022\007message\032\014common.proto\")\n\014"
    "LoginRequest\022\014\n\004name\030\001 \001(\t\022\013\n\003pwd\030\002 \001(\t\""
    "3\n\026RegisterAccountRequest\022\014\n\004name\030\001 \002(\t\022"
    "\013\n\003pwd\030\002 \002(\t\"\031\n\027RegisterAccountFaildACK\""
    "\205\001\n\rLoginResponse\022\017\n\007gate_ip\030\001 \001(\t\022\021\n\tga"
    "te_port\030\002 \001(\r\022\024\n\014user_account\030\003 \001(\r\022(\n\006r"
    "esult\030\004 \001(\0162\030.message.enumLoginResult\022\020\n"
    "\010chartype\030\005 \001(\r\"!\n\tLoginGame\022\024\n\014user_acc"
    "ount\030\001 \002(\r\"2\n\nClientExit\022\016\n\006charid\030\001 \001(\r"
    "\022\024\n\014user_account\030\002 \001(\004*\242\001\n\017enumLoginResu"
    "lt\022\033\n\027enumLoginResult_Success\020\000\022\030\n\024enumL"
    "oginResult_Fail\020\001\022\034\n\030enumLoginResult_Nam"
    "eFail\020\002\022\033\n\027enumLoginResult_PwdFail\020\003\022\035\n\031"
    "enumLoginResult_HaveLogin\020\004", 547);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
  LoginRequest::default_instance_ = new LoginRequest();
  RegisterAccountRequest::default_instance_ = new RegisterAccountRequest();
  RegisterAccountFaildACK::default_instance_ = new RegisterAccountFaildACK();
  LoginResponse::default_instance_ = new LoginResponse();
  LoginGame::default_instance_ = new LoginGame();
  ClientExit::default_instance_ = new ClientExit();
  LoginRequest::default_instance_->InitAsDefaultInstance();
  RegisterAccountRequest::default_instance_->InitAsDefaultInstance();
  RegisterAccountFaildACK::default_instance_->InitAsDefaultInstance();
  LoginResponse::default_instance_->InitAsDefaultInstance();
  LoginGame::default_instance_->InitAsDefaultInstance();
  ClientExit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_login_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_login_2eproto {
  StaticDescriptorInitializer_login_2eproto() {
    protobuf_AddDesc_login_2eproto();
  }
} static_descriptor_initializer_login_2eproto_;
const ::google::protobuf::EnumDescriptor* enumLoginResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enumLoginResult_descriptor_;
}
bool enumLoginResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int LoginRequest::kNameFieldNumber;
const int LoginRequest::kPwdFieldNumber;
#endif  // !_MSC_VER

LoginRequest::LoginRequest()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.LoginRequest)
}

void LoginRequest::InitAsDefaultInstance() {
}

LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.LoginRequest)
}

void LoginRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:message.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRequest_descriptor_;
}

const LoginRequest& LoginRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

LoginRequest* LoginRequest::default_instance_ = NULL;

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pwd()) {
      pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.LoginRequest.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pwd;
        break;
      }

      // optional string pwd = 2;
      case 2: {
        if (tag == 18) {
         parse_pwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pwd().data(), this->pwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.LoginRequest.pwd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.LoginRequest)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.LoginRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string pwd = 2;
  if (has_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.LoginRequest.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pwd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.LoginRequest)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.LoginRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string pwd = 2;
  if (has_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.LoginRequest.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pwd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.LoginRequest)
  return target;
}

int LoginRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string pwd = 2;
    if (has_pwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pwd());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_pwd()) {
      set_has_pwd();
      pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {

  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  name_.Swap(&other->name_);
  pwd_.Swap(&other->pwd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRequest_descriptor_;
  metadata.reflection = LoginRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// optional string name = 1;
 bool LoginRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void LoginRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void LoginRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void LoginRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& LoginRequest::name() const {
  // @@protoc_insertion_point(field_get:message.LoginRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.LoginRequest.name)
}
 void LoginRequest::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.LoginRequest.name)
}
 void LoginRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.LoginRequest.name)
}
 ::std::string* LoginRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.LoginRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.LoginRequest.name)
}

// optional string pwd = 2;
 bool LoginRequest::has_pwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void LoginRequest::set_has_pwd() {
  _has_bits_[0] |= 0x00000002u;
}
 void LoginRequest::clear_has_pwd() {
  _has_bits_[0] &= ~0x00000002u;
}
 void LoginRequest::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pwd();
}
 const ::std::string& LoginRequest::pwd() const {
  // @@protoc_insertion_point(field_get:message.LoginRequest.pwd)
  return pwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_pwd(const ::std::string& value) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.LoginRequest.pwd)
}
 void LoginRequest::set_pwd(const char* value) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.LoginRequest.pwd)
}
 void LoginRequest::set_pwd(const char* value, size_t size) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.LoginRequest.pwd)
}
 ::std::string* LoginRequest::mutable_pwd() {
  set_has_pwd();
  // @@protoc_insertion_point(field_mutable:message.LoginRequest.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRequest::release_pwd() {
  clear_has_pwd();
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRequest::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    set_has_pwd();
  } else {
    clear_has_pwd();
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:message.LoginRequest.pwd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int RegisterAccountRequest::kNameFieldNumber;
const int RegisterAccountRequest::kPwdFieldNumber;
#endif  // !_MSC_VER

RegisterAccountRequest::RegisterAccountRequest()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.RegisterAccountRequest)
}

void RegisterAccountRequest::InitAsDefaultInstance() {
}

RegisterAccountRequest::RegisterAccountRequest(const RegisterAccountRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.RegisterAccountRequest)
}

void RegisterAccountRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegisterAccountRequest::~RegisterAccountRequest() {
  // @@protoc_insertion_point(destructor:message.RegisterAccountRequest)
  SharedDtor();
}

void RegisterAccountRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RegisterAccountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterAccountRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterAccountRequest_descriptor_;
}

const RegisterAccountRequest& RegisterAccountRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

RegisterAccountRequest* RegisterAccountRequest::default_instance_ = NULL;

RegisterAccountRequest* RegisterAccountRequest::New(::google::protobuf::Arena* arena) const {
  RegisterAccountRequest* n = new RegisterAccountRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterAccountRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pwd()) {
      pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RegisterAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.RegisterAccountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.RegisterAccountRequest.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pwd;
        break;
      }

      // required string pwd = 2;
      case 2: {
        if (tag == 18) {
         parse_pwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pwd().data(), this->pwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.RegisterAccountRequest.pwd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.RegisterAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.RegisterAccountRequest)
  return false;
#undef DO_
}

void RegisterAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.RegisterAccountRequest)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.RegisterAccountRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string pwd = 2;
  if (has_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.RegisterAccountRequest.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pwd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.RegisterAccountRequest)
}

::google::protobuf::uint8* RegisterAccountRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.RegisterAccountRequest)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.RegisterAccountRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string pwd = 2;
  if (has_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.RegisterAccountRequest.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pwd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.RegisterAccountRequest)
  return target;
}

int RegisterAccountRequest::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_pwd()) {
    // required string pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  return total_size;
}
int RegisterAccountRequest::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegisterAccountRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RegisterAccountRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RegisterAccountRequest::MergeFrom(const RegisterAccountRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_pwd()) {
      set_has_pwd();
      pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RegisterAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountRequest::CopyFrom(const RegisterAccountRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RegisterAccountRequest::Swap(RegisterAccountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterAccountRequest::InternalSwap(RegisterAccountRequest* other) {
  name_.Swap(&other->name_);
  pwd_.Swap(&other->pwd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterAccountRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegisterAccountRequest_descriptor_;
  metadata.reflection = RegisterAccountRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterAccountRequest

// required string name = 1;
 bool RegisterAccountRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void RegisterAccountRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void RegisterAccountRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void RegisterAccountRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& RegisterAccountRequest::name() const {
  // @@protoc_insertion_point(field_get:message.RegisterAccountRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RegisterAccountRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.RegisterAccountRequest.name)
}
 void RegisterAccountRequest::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.RegisterAccountRequest.name)
}
 void RegisterAccountRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.RegisterAccountRequest.name)
}
 ::std::string* RegisterAccountRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.RegisterAccountRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RegisterAccountRequest::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RegisterAccountRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.RegisterAccountRequest.name)
}

// required string pwd = 2;
 bool RegisterAccountRequest::has_pwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void RegisterAccountRequest::set_has_pwd() {
  _has_bits_[0] |= 0x00000002u;
}
 void RegisterAccountRequest::clear_has_pwd() {
  _has_bits_[0] &= ~0x00000002u;
}
 void RegisterAccountRequest::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pwd();
}
 const ::std::string& RegisterAccountRequest::pwd() const {
  // @@protoc_insertion_point(field_get:message.RegisterAccountRequest.pwd)
  return pwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RegisterAccountRequest::set_pwd(const ::std::string& value) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.RegisterAccountRequest.pwd)
}
 void RegisterAccountRequest::set_pwd(const char* value) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.RegisterAccountRequest.pwd)
}
 void RegisterAccountRequest::set_pwd(const char* value, size_t size) {
  set_has_pwd();
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.RegisterAccountRequest.pwd)
}
 ::std::string* RegisterAccountRequest::mutable_pwd() {
  set_has_pwd();
  // @@protoc_insertion_point(field_mutable:message.RegisterAccountRequest.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RegisterAccountRequest::release_pwd() {
  clear_has_pwd();
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RegisterAccountRequest::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    set_has_pwd();
  } else {
    clear_has_pwd();
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:message.RegisterAccountRequest.pwd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RegisterAccountFaildACK::RegisterAccountFaildACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.RegisterAccountFaildACK)
}

void RegisterAccountFaildACK::InitAsDefaultInstance() {
}

RegisterAccountFaildACK::RegisterAccountFaildACK(const RegisterAccountFaildACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.RegisterAccountFaildACK)
}

void RegisterAccountFaildACK::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegisterAccountFaildACK::~RegisterAccountFaildACK() {
  // @@protoc_insertion_point(destructor:message.RegisterAccountFaildACK)
  SharedDtor();
}

void RegisterAccountFaildACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RegisterAccountFaildACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterAccountFaildACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterAccountFaildACK_descriptor_;
}

const RegisterAccountFaildACK& RegisterAccountFaildACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

RegisterAccountFaildACK* RegisterAccountFaildACK::default_instance_ = NULL;

RegisterAccountFaildACK* RegisterAccountFaildACK::New(::google::protobuf::Arena* arena) const {
  RegisterAccountFaildACK* n = new RegisterAccountFaildACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterAccountFaildACK::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RegisterAccountFaildACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.RegisterAccountFaildACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:message.RegisterAccountFaildACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.RegisterAccountFaildACK)
  return false;
#undef DO_
}

void RegisterAccountFaildACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.RegisterAccountFaildACK)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.RegisterAccountFaildACK)
}

::google::protobuf::uint8* RegisterAccountFaildACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.RegisterAccountFaildACK)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.RegisterAccountFaildACK)
  return target;
}

int RegisterAccountFaildACK::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterAccountFaildACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegisterAccountFaildACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RegisterAccountFaildACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RegisterAccountFaildACK::MergeFrom(const RegisterAccountFaildACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RegisterAccountFaildACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountFaildACK::CopyFrom(const RegisterAccountFaildACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountFaildACK::IsInitialized() const {

  return true;
}

void RegisterAccountFaildACK::Swap(RegisterAccountFaildACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterAccountFaildACK::InternalSwap(RegisterAccountFaildACK* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterAccountFaildACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegisterAccountFaildACK_descriptor_;
  metadata.reflection = RegisterAccountFaildACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterAccountFaildACK

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int LoginResponse::kGateIpFieldNumber;
const int LoginResponse::kGatePortFieldNumber;
const int LoginResponse::kUserAccountFieldNumber;
const int LoginResponse::kResultFieldNumber;
const int LoginResponse::kChartypeFieldNumber;
#endif  // !_MSC_VER

LoginResponse::LoginResponse()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.LoginResponse)
}

void LoginResponse::InitAsDefaultInstance() {
}

LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.LoginResponse)
}

void LoginResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gate_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_port_ = 0u;
  user_account_ = 0u;
  result_ = 0;
  chartype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:message.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
  gate_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginResponse_descriptor_;
}

const LoginResponse& LoginResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

LoginResponse* LoginResponse::default_instance_ = NULL;

LoginResponse* LoginResponse::New(::google::protobuf::Arena* arena) const {
  LoginResponse* n = new LoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResponse::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LoginResponse*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(gate_port_, chartype_);
    if (has_gate_ip()) {
      gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.LoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gate_ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gate_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gate_ip().data(), this->gate_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.LoginResponse.gate_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gate_port;
        break;
      }

      // optional uint32 gate_port = 2;
      case 2: {
        if (tag == 16) {
         parse_gate_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gate_port_)));
          set_has_gate_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_user_account;
        break;
      }

      // optional uint32 user_account = 3;
      case 3: {
        if (tag == 24) {
         parse_user_account:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_account_)));
          set_has_user_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_result;
        break;
      }

      // optional .message.enumLoginResult result = 4;
      case 4: {
        if (tag == 32) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::enumLoginResult_IsValid(value)) {
            set_result(static_cast< ::message::enumLoginResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_chartype;
        break;
      }

      // optional uint32 chartype = 5;
      case 5: {
        if (tag == 40) {
         parse_chartype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chartype_)));
          set_has_chartype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.LoginResponse)
  // optional string gate_ip = 1;
  if (has_gate_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gate_ip().data(), this->gate_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.LoginResponse.gate_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gate_ip(), output);
  }

  // optional uint32 gate_port = 2;
  if (has_gate_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gate_port(), output);
  }

  // optional uint32 user_account = 3;
  if (has_user_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->user_account(), output);
  }

  // optional .message.enumLoginResult result = 4;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->result(), output);
  }

  // optional uint32 chartype = 5;
  if (has_chartype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->chartype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.LoginResponse)
  // optional string gate_ip = 1;
  if (has_gate_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gate_ip().data(), this->gate_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.LoginResponse.gate_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gate_ip(), target);
  }

  // optional uint32 gate_port = 2;
  if (has_gate_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gate_port(), target);
  }

  // optional uint32 user_account = 3;
  if (has_user_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->user_account(), target);
  }

  // optional .message.enumLoginResult result = 4;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->result(), target);
  }

  // optional uint32 chartype = 5;
  if (has_chartype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->chartype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.LoginResponse)
  return target;
}

int LoginResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional string gate_ip = 1;
    if (has_gate_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gate_ip());
    }

    // optional uint32 gate_port = 2;
    if (has_gate_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gate_port());
    }

    // optional uint32 user_account = 3;
    if (has_user_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_account());
    }

    // optional .message.enumLoginResult result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional uint32 chartype = 5;
    if (has_chartype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chartype());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gate_ip()) {
      set_has_gate_ip();
      gate_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gate_ip_);
    }
    if (from.has_gate_port()) {
      set_gate_port(from.gate_port());
    }
    if (from.has_user_account()) {
      set_user_account(from.user_account());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_chartype()) {
      set_chartype(from.chartype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {

  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  gate_ip_.Swap(&other->gate_ip_);
  std::swap(gate_port_, other->gate_port_);
  std::swap(user_account_, other->user_account_);
  std::swap(result_, other->result_);
  std::swap(chartype_, other->chartype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginResponse_descriptor_;
  metadata.reflection = LoginResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginResponse

// optional string gate_ip = 1;
 bool LoginResponse::has_gate_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void LoginResponse::set_has_gate_ip() {
  _has_bits_[0] |= 0x00000001u;
}
 void LoginResponse::clear_has_gate_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
 void LoginResponse::clear_gate_ip() {
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gate_ip();
}
 const ::std::string& LoginResponse::gate_ip() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.gate_ip)
  return gate_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginResponse::set_gate_ip(const ::std::string& value) {
  set_has_gate_ip();
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.LoginResponse.gate_ip)
}
 void LoginResponse::set_gate_ip(const char* value) {
  set_has_gate_ip();
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.LoginResponse.gate_ip)
}
 void LoginResponse::set_gate_ip(const char* value, size_t size) {
  set_has_gate_ip();
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.LoginResponse.gate_ip)
}
 ::std::string* LoginResponse::mutable_gate_ip() {
  set_has_gate_ip();
  // @@protoc_insertion_point(field_mutable:message.LoginResponse.gate_ip)
  return gate_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginResponse::release_gate_ip() {
  clear_has_gate_ip();
  return gate_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginResponse::set_allocated_gate_ip(::std::string* gate_ip) {
  if (gate_ip != NULL) {
    set_has_gate_ip();
  } else {
    clear_has_gate_ip();
  }
  gate_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gate_ip);
  // @@protoc_insertion_point(field_set_allocated:message.LoginResponse.gate_ip)
}

// optional uint32 gate_port = 2;
 bool LoginResponse::has_gate_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void LoginResponse::set_has_gate_port() {
  _has_bits_[0] |= 0x00000002u;
}
 void LoginResponse::clear_has_gate_port() {
  _has_bits_[0] &= ~0x00000002u;
}
 void LoginResponse::clear_gate_port() {
  gate_port_ = 0u;
  clear_has_gate_port();
}
 ::google::protobuf::uint32 LoginResponse::gate_port() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.gate_port)
  return gate_port_;
}
 void LoginResponse::set_gate_port(::google::protobuf::uint32 value) {
  set_has_gate_port();
  gate_port_ = value;
  // @@protoc_insertion_point(field_set:message.LoginResponse.gate_port)
}

// optional uint32 user_account = 3;
 bool LoginResponse::has_user_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void LoginResponse::set_has_user_account() {
  _has_bits_[0] |= 0x00000004u;
}
 void LoginResponse::clear_has_user_account() {
  _has_bits_[0] &= ~0x00000004u;
}
 void LoginResponse::clear_user_account() {
  user_account_ = 0u;
  clear_has_user_account();
}
 ::google::protobuf::uint32 LoginResponse::user_account() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.user_account)
  return user_account_;
}
 void LoginResponse::set_user_account(::google::protobuf::uint32 value) {
  set_has_user_account();
  user_account_ = value;
  // @@protoc_insertion_point(field_set:message.LoginResponse.user_account)
}

// optional .message.enumLoginResult result = 4;
 bool LoginResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void LoginResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
 void LoginResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
 void LoginResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::message::enumLoginResult LoginResponse::result() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.result)
  return static_cast< ::message::enumLoginResult >(result_);
}
 void LoginResponse::set_result(::message::enumLoginResult value) {
  assert(::message::enumLoginResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:message.LoginResponse.result)
}

// optional uint32 chartype = 5;
 bool LoginResponse::has_chartype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void LoginResponse::set_has_chartype() {
  _has_bits_[0] |= 0x00000010u;
}
 void LoginResponse::clear_has_chartype() {
  _has_bits_[0] &= ~0x00000010u;
}
 void LoginResponse::clear_chartype() {
  chartype_ = 0u;
  clear_has_chartype();
}
 ::google::protobuf::uint32 LoginResponse::chartype() const {
  // @@protoc_insertion_point(field_get:message.LoginResponse.chartype)
  return chartype_;
}
 void LoginResponse::set_chartype(::google::protobuf::uint32 value) {
  set_has_chartype();
  chartype_ = value;
  // @@protoc_insertion_point(field_set:message.LoginResponse.chartype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int LoginGame::kUserAccountFieldNumber;
#endif  // !_MSC_VER

LoginGame::LoginGame()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.LoginGame)
}

void LoginGame::InitAsDefaultInstance() {
}

LoginGame::LoginGame(const LoginGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.LoginGame)
}

void LoginGame::SharedCtor() {
  _cached_size_ = 0;
  user_account_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginGame::~LoginGame() {
  // @@protoc_insertion_point(destructor:message.LoginGame)
  SharedDtor();
}

void LoginGame::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoginGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginGame_descriptor_;
}

const LoginGame& LoginGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

LoginGame* LoginGame::default_instance_ = NULL;

LoginGame* LoginGame::New(::google::protobuf::Arena* arena) const {
  LoginGame* n = new LoginGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginGame::Clear() {
  user_account_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.LoginGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user_account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_account_)));
          set_has_user_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.LoginGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.LoginGame)
  return false;
#undef DO_
}

void LoginGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.LoginGame)
  // required uint32 user_account = 1;
  if (has_user_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.LoginGame)
}

::google::protobuf::uint8* LoginGame::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.LoginGame)
  // required uint32 user_account = 1;
  if (has_user_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.LoginGame)
  return target;
}

int LoginGame::ByteSize() const {
  int total_size = 0;

  // required uint32 user_account = 1;
  if (has_user_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_account());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginGame::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginGame* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginGame*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginGame::MergeFrom(const LoginGame& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_account()) {
      set_user_account(from.user_account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginGame::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginGame::CopyFrom(const LoginGame& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginGame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LoginGame::Swap(LoginGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginGame::InternalSwap(LoginGame* other) {
  std::swap(user_account_, other->user_account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginGame_descriptor_;
  metadata.reflection = LoginGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginGame

// required uint32 user_account = 1;
 bool LoginGame::has_user_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void LoginGame::set_has_user_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void LoginGame::clear_has_user_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void LoginGame::clear_user_account() {
  user_account_ = 0u;
  clear_has_user_account();
}
 ::google::protobuf::uint32 LoginGame::user_account() const {
  // @@protoc_insertion_point(field_get:message.LoginGame.user_account)
  return user_account_;
}
 void LoginGame::set_user_account(::google::protobuf::uint32 value) {
  set_has_user_account();
  user_account_ = value;
  // @@protoc_insertion_point(field_set:message.LoginGame.user_account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ClientExit::kCharidFieldNumber;
const int ClientExit::kUserAccountFieldNumber;
#endif  // !_MSC_VER

ClientExit::ClientExit()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ClientExit)
}

void ClientExit::InitAsDefaultInstance() {
}

ClientExit::ClientExit(const ClientExit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ClientExit)
}

void ClientExit::SharedCtor() {
  _cached_size_ = 0;
  charid_ = 0u;
  user_account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientExit::~ClientExit() {
  // @@protoc_insertion_point(destructor:message.ClientExit)
  SharedDtor();
}

void ClientExit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientExit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientExit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientExit_descriptor_;
}

const ClientExit& ClientExit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

ClientExit* ClientExit::default_instance_ = NULL;

ClientExit* ClientExit::New(::google::protobuf::Arena* arena) const {
  ClientExit* n = new ClientExit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientExit::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ClientExit*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(user_account_, charid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientExit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ClientExit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 charid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_account;
        break;
      }

      // optional uint64 user_account = 2;
      case 2: {
        if (tag == 16) {
         parse_user_account:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_account_)));
          set_has_user_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ClientExit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ClientExit)
  return false;
#undef DO_
}

void ClientExit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ClientExit)
  // optional uint32 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->charid(), output);
  }

  // optional uint64 user_account = 2;
  if (has_user_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->user_account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ClientExit)
}

::google::protobuf::uint8* ClientExit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ClientExit)
  // optional uint32 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->charid(), target);
  }

  // optional uint64 user_account = 2;
  if (has_user_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->user_account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ClientExit)
  return target;
}

int ClientExit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional uint32 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->charid());
    }

    // optional uint64 user_account = 2;
    if (has_user_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_account());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientExit::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientExit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientExit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientExit::MergeFrom(const ClientExit& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_user_account()) {
      set_user_account(from.user_account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ClientExit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientExit::CopyFrom(const ClientExit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientExit::IsInitialized() const {

  return true;
}

void ClientExit::Swap(ClientExit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientExit::InternalSwap(ClientExit* other) {
  std::swap(charid_, other->charid_);
  std::swap(user_account_, other->user_account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientExit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientExit_descriptor_;
  metadata.reflection = ClientExit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientExit

// optional uint32 charid = 1;
 bool ClientExit::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ClientExit::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
 void ClientExit::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ClientExit::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
 ::google::protobuf::uint32 ClientExit::charid() const {
  // @@protoc_insertion_point(field_get:message.ClientExit.charid)
  return charid_;
}
 void ClientExit::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:message.ClientExit.charid)
}

// optional uint64 user_account = 2;
 bool ClientExit::has_user_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void ClientExit::set_has_user_account() {
  _has_bits_[0] |= 0x00000002u;
}
 void ClientExit::clear_has_user_account() {
  _has_bits_[0] &= ~0x00000002u;
}
 void ClientExit::clear_user_account() {
  user_account_ = GOOGLE_ULONGLONG(0);
  clear_has_user_account();
}
 ::google::protobuf::uint64 ClientExit::user_account() const {
  // @@protoc_insertion_point(field_get:message.ClientExit.user_account)
  return user_account_;
}
 void ClientExit::set_user_account(::google::protobuf::uint64 value) {
  set_has_user_account();
  user_account_ = value;
  // @@protoc_insertion_point(field_set:message.ClientExit.user_account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
